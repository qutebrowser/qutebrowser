[pytest]
log_level = NOTSET
addopts = --strict -rfEw --faulthandler-timeout=90 --instafail --benchmark-columns=Min,Max,Median
testpaths = tests
markers =
    gui: Tests using the GUI (e.g. spawning widgets)
    posix: Tests which only can run on a POSIX OS.
    windows: Tests which only can run on Windows.
    linux: Tests which only can run on Linux.
    mac: Tests which only can run on macOS.
    not_mac: Tests which can not run on macOS.
    not_frozen: Tests which can't be run if sys.frozen is True.
    no_xvfb: Tests which can't be run with Xvfb.
    frozen: Tests which can only be run if sys.frozen is True.
    integration: Tests which test a bigger portion of code
    end2end: End to end tests which run qutebrowser as subprocess
    xfail_norun: xfail the test with out running it
    ci: Tests which should only run on CI.
    no_ci: Tests which should not run on CI.
    qtwebengine_todo: Features still missing with QtWebEngine
    qtwebengine_skip: Tests not applicable with QtWebEngine
    qtwebkit_skip: Tests not applicable with QtWebKit
    qtwebengine_flaky: Tests which are flaky (and currently skipped) with QtWebEngine
    qtwebengine_mac_xfail: Tests which fail on macOS with QtWebEngine
    js_prompt: Tests needing to display a javascript prompt
    this: Used to mark tests during development
    no_invalid_lines: Don't fail on unparseable lines in end2end tests
    issue2478: Tests which are broken on Windows with QtWebEngine, https://github.com/qutebrowser/qutebrowser/issues/2478
    issue3572: Tests which are broken with QtWebEngine and Qt 5.10, https://github.com/qutebrowser/qutebrowser/issues/3572
    qtbug60673: Tests which are broken if the conversion from orange selection to real selection  is flaky
    fake_os: Fake utils.is_* to a fake operating system
    unicode_locale: Tests which need an unicode locale to work
    qtwebkit6021_skip: Tests which would fail on WebKit version 602.1
qt_log_level_fail = WARNING
qt_log_ignore =
    ^SpellCheck: .*
    ^SetProcessDpiAwareness failed: .*
    ^QWindowsWindow::setGeometry(Dp)?: Unable to set geometry .*
    ^QProcess: Destroyed while process .* is still running\.
    ^"Method "GetAll" with signature "s" on interface "org\.freedesktop\.DBus\.Properties" doesn't exist
    ^"Method \\"GetAll\\" with signature \\"s\\" on interface \\"org\.freedesktop\.DBus\.Properties\\" doesn't exist\\n"
    ^propsReply "Method \\"GetAll\\" with signature \\"s\\" on interface \\"org\.freedesktop\.DBus\.Properties\\" doesn't exist\\n"
    ^nmReply "Method \\"GetDevices\\" with signature \\"\\" on interface \\"org\.freedesktop\.NetworkManager\\" doesn't exist\\n"
    ^"Object path cannot be empty"
    ^virtual void QSslSocketBackendPrivate::transmit\(\) SSL write failed with error: -9805
    ^virtual void QSslSocketBackendPrivate::transmit\(\) SSLRead failed with: -9805
    ^Type conversion already registered from type .*
    ^QNetworkReplyImplPrivate::error: Internal problem, this method must only be called once\.
    ^QWaitCondition: Destroyed while threads are still waiting
    ^QXcbXSettings::QXcbXSettings\(QXcbScreen\*\) Failed to get selection owner for XSETTINGS_S atom
    ^QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to .*
    ^QObject::connect: Cannot connect \(null\)::stateChanged\(QNetworkSession::State\) to QNetworkReplyHttpImpl::_q_networkSessionStateChanged\(QNetworkSession::State\)
    ^QXcbClipboard: Cannot transfer data, no data available
    ^load glyph failed
    ^Error when parsing the netrc file
    ^Image of format '' blocked because it is not considered safe. If you are sure it is safe to do so, you can white-list the format by setting the environment variable QTWEBKIT_IMAGEFORMAT_WHITELIST=
    ^QPainter::end: Painter ended with \d+ saved states
    ^QSslSocket: cannot resolve .*
    ^QSslSocket: cannot call unresolved function .*
    ^Incompatible version of OpenSSL
    ^QQuickWidget::invalidateRenderControl could not make context current
    ^libpng warning: iCCP: known incorrect sRGB profile
    ^inotify_add_watch\(".*"\) failed: "No space left on device"
    ^QSettings::value: Empty key passed
    ^Icon theme ".*" not found
    ^Error receiving trust for a CA certificate
    ^QBackingStore::endPaint\(\) called with active painter on backingstore paint device
    ^QPaintDevice: Cannot destroy paint device that is being painted
    ^DirectWrite: CreateFontFaceFromHDC\(\) failed .*
xfail_strict = true
filterwarnings = error
