#!/usr/bin/env python3
"""Qutebrowser userscript to run local command

   Usage:
     `spawn --userscript run_local_cmd COMMAND (ARGS)

   Recommended alias is "!". Usage would be:
     ':! COMMAND (ARGS)'

   Adding alias through config-dict-add:
   :config-dict-add aliases ! "spawn --userscript run_local_cmd"

   Adding alias throuh config.py:
   c.aliases = {
    (...)
    '!': 'spawn --userscript run_local_cmd',
    (...)
    }

   You can create additional alias to run specific local commands based on this userscript

   by Tiago Oliveira Weber (towalker), 2020
"""

import os, sys
import subprocess

max_message_lines = 10
max_message_size = 20

w = os.pipe()
qute_fifo = (os.environ.get('QUTE_FIFO'))
sys.stdout = open(qute_fifo,'w')

command_string = ' '.join(sys.argv[1:])

print("message-info 'running: %s'"%command_string)

p = subprocess.Popen([command_string], stdout=subprocess.PIPE, shell=True)
system_output = p.stdout.read().decode("utf-8")
#system_output = check_output([command_string]).decode("utf-8")
system_output_lines = system_output.split('\n')

if (len(system_output_lines) > max_message_lines):
    system_output_lines = system_output_lines[0:max_message_lines]
    print("message-info 'OUTPUT TRUNCATED AFTER FIRST %d LINES'"%max_message_lines)
    
for line in system_output_lines:
    if len(line)>max_message_size:
        system_output = line[0:max_message_size]
    system_output = system_output.replace('\n','')
    print("message-info 'output: %s'"%system_output)
