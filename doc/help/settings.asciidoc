// DO NOT EDIT THIS FILE DIRECTLY!
// It is autogenerated by running:
//   $ python3 scripts/dev/src2asciidoc.py
// vim: readonly:

= Setting reference

== All settings

[options="header",width="75%",cols="25%,75%"]
|==============
|Setting|Description
|<<aliases,aliases>>|Aliases for commands.
|<<auto_save.interval,auto_save.interval>>|Time interval (in milliseconds) between auto-saves of config/cookies/etc.
|<<auto_save.session,auto_save.session>>|Always restore open sites when qutebrowser is reopened.
|<<backend,backend>>|Backend to use to display websites.
|<<bindings.commands,bindings.commands>>|Keybindings mapping keys to commands in different modes.
|<<bindings.default,bindings.default>>|Default keybindings. If you want to add bindings, modify `bindings.commands` instead.
|<<bindings.key_mappings,bindings.key_mappings>>|This setting can be used to map keys to other keys.
|<<colors.completion.category.bg,colors.completion.category.bg>>|Background color of the completion widget category headers.
|<<colors.completion.category.border.bottom,colors.completion.category.border.bottom>>|Bottom border color of the completion widget category headers.
|<<colors.completion.category.border.top,colors.completion.category.border.top>>|Top border color of the completion widget category headers.
|<<colors.completion.category.fg,colors.completion.category.fg>>|Foreground color of completion widget category headers.
|<<colors.completion.even.bg,colors.completion.even.bg>>|Background color of the completion widget for even rows.
|<<colors.completion.fg,colors.completion.fg>>|Text color of the completion widget.
|<<colors.completion.item.selected.bg,colors.completion.item.selected.bg>>|Background color of the selected completion item.
|<<colors.completion.item.selected.border.bottom,colors.completion.item.selected.border.bottom>>|Bottom border color of the selected completion item.
|<<colors.completion.item.selected.border.top,colors.completion.item.selected.border.top>>|Top border color of the selected completion item.
|<<colors.completion.item.selected.fg,colors.completion.item.selected.fg>>|Foreground color of the selected completion item.
|<<colors.completion.item.selected.match.fg,colors.completion.item.selected.match.fg>>|Foreground color of the matched text in the selected completion item.
|<<colors.completion.match.fg,colors.completion.match.fg>>|Foreground color of the matched text in the completion.
|<<colors.completion.odd.bg,colors.completion.odd.bg>>|Background color of the completion widget for odd rows.
|<<colors.completion.scrollbar.bg,colors.completion.scrollbar.bg>>|Color of the scrollbar in the completion view.
|<<colors.completion.scrollbar.fg,colors.completion.scrollbar.fg>>|Color of the scrollbar handle in the completion view.
|<<colors.contextmenu.disabled.bg,colors.contextmenu.disabled.bg>>|Background color of disabled items in the context menu.
|<<colors.contextmenu.disabled.fg,colors.contextmenu.disabled.fg>>|Foreground color of disabled items in the context menu.
|<<colors.contextmenu.menu.bg,colors.contextmenu.menu.bg>>|Background color of the context menu.
|<<colors.contextmenu.menu.fg,colors.contextmenu.menu.fg>>|Foreground color of the context menu.
|<<colors.contextmenu.selected.bg,colors.contextmenu.selected.bg>>|Background color of the context menu's selected item.
|<<colors.contextmenu.selected.fg,colors.contextmenu.selected.fg>>|Foreground color of the context menu's selected item.
|<<colors.downloads.bar.bg,colors.downloads.bar.bg>>|Background color for the download bar.
|<<colors.downloads.error.bg,colors.downloads.error.bg>>|Background color for downloads with errors.
|<<colors.downloads.error.fg,colors.downloads.error.fg>>|Foreground color for downloads with errors.
|<<colors.downloads.start.bg,colors.downloads.start.bg>>|Color gradient start for download backgrounds.
|<<colors.downloads.start.fg,colors.downloads.start.fg>>|Color gradient start for download text.
|<<colors.downloads.stop.bg,colors.downloads.stop.bg>>|Color gradient stop for download backgrounds.
|<<colors.downloads.stop.fg,colors.downloads.stop.fg>>|Color gradient end for download text.
|<<colors.downloads.system.bg,colors.downloads.system.bg>>|Color gradient interpolation system for download backgrounds.
|<<colors.downloads.system.fg,colors.downloads.system.fg>>|Color gradient interpolation system for download text.
|<<colors.hints.bg,colors.hints.bg>>|Background color for hints.
|<<colors.hints.fg,colors.hints.fg>>|Font color for hints.
|<<colors.hints.match.fg,colors.hints.match.fg>>|Font color for the matched part of hints.
|<<colors.keyhint.bg,colors.keyhint.bg>>|Background color of the keyhint widget.
|<<colors.keyhint.fg,colors.keyhint.fg>>|Text color for the keyhint widget.
|<<colors.keyhint.suffix.fg,colors.keyhint.suffix.fg>>|Highlight color for keys to complete the current keychain.
|<<colors.messages.error.bg,colors.messages.error.bg>>|Background color of an error message.
|<<colors.messages.error.border,colors.messages.error.border>>|Border color of an error message.
|<<colors.messages.error.fg,colors.messages.error.fg>>|Foreground color of an error message.
|<<colors.messages.info.bg,colors.messages.info.bg>>|Background color of an info message.
|<<colors.messages.info.border,colors.messages.info.border>>|Border color of an info message.
|<<colors.messages.info.fg,colors.messages.info.fg>>|Foreground color of an info message.
|<<colors.messages.warning.bg,colors.messages.warning.bg>>|Background color of a warning message.
|<<colors.messages.warning.border,colors.messages.warning.border>>|Border color of a warning message.
|<<colors.messages.warning.fg,colors.messages.warning.fg>>|Foreground color of a warning message.
|<<colors.prompts.bg,colors.prompts.bg>>|Background color for prompts.
|<<colors.prompts.border,colors.prompts.border>>|Border used around UI elements in prompts.
|<<colors.prompts.fg,colors.prompts.fg>>|Foreground color for prompts.
|<<colors.prompts.selected.bg,colors.prompts.selected.bg>>|Background color for the selected item in filename prompts.
|<<colors.statusbar.caret.bg,colors.statusbar.caret.bg>>|Background color of the statusbar in caret mode.
|<<colors.statusbar.caret.fg,colors.statusbar.caret.fg>>|Foreground color of the statusbar in caret mode.
|<<colors.statusbar.caret.selection.bg,colors.statusbar.caret.selection.bg>>|Background color of the statusbar in caret mode with a selection.
|<<colors.statusbar.caret.selection.fg,colors.statusbar.caret.selection.fg>>|Foreground color of the statusbar in caret mode with a selection.
|<<colors.statusbar.command.bg,colors.statusbar.command.bg>>|Background color of the statusbar in command mode.
|<<colors.statusbar.command.fg,colors.statusbar.command.fg>>|Foreground color of the statusbar in command mode.
|<<colors.statusbar.command.private.bg,colors.statusbar.command.private.bg>>|Background color of the statusbar in private browsing + command mode.
|<<colors.statusbar.command.private.fg,colors.statusbar.command.private.fg>>|Foreground color of the statusbar in private browsing + command mode.
|<<colors.statusbar.insert.bg,colors.statusbar.insert.bg>>|Background color of the statusbar in insert mode.
|<<colors.statusbar.insert.fg,colors.statusbar.insert.fg>>|Foreground color of the statusbar in insert mode.
|<<colors.statusbar.normal.bg,colors.statusbar.normal.bg>>|Background color of the statusbar.
|<<colors.statusbar.normal.fg,colors.statusbar.normal.fg>>|Foreground color of the statusbar.
|<<colors.statusbar.passthrough.bg,colors.statusbar.passthrough.bg>>|Background color of the statusbar in passthrough mode.
|<<colors.statusbar.passthrough.fg,colors.statusbar.passthrough.fg>>|Foreground color of the statusbar in passthrough mode.
|<<colors.statusbar.private.bg,colors.statusbar.private.bg>>|Background color of the statusbar in private browsing mode.
|<<colors.statusbar.private.fg,colors.statusbar.private.fg>>|Foreground color of the statusbar in private browsing mode.
|<<colors.statusbar.progress.bg,colors.statusbar.progress.bg>>|Background color of the progress bar.
|<<colors.statusbar.url.error.fg,colors.statusbar.url.error.fg>>|Foreground color of the URL in the statusbar on error.
|<<colors.statusbar.url.fg,colors.statusbar.url.fg>>|Default foreground color of the URL in the statusbar.
|<<colors.statusbar.url.hover.fg,colors.statusbar.url.hover.fg>>|Foreground color of the URL in the statusbar for hovered links.
|<<colors.statusbar.url.success.http.fg,colors.statusbar.url.success.http.fg>>|Foreground color of the URL in the statusbar on successful load (http).
|<<colors.statusbar.url.success.https.fg,colors.statusbar.url.success.https.fg>>|Foreground color of the URL in the statusbar on successful load (https).
|<<colors.statusbar.url.warn.fg,colors.statusbar.url.warn.fg>>|Foreground color of the URL in the statusbar when there's a warning.
|<<colors.tabs.bar.bg,colors.tabs.bar.bg>>|Background color of the tab bar.
|<<colors.tabs.even.bg,colors.tabs.even.bg>>|Background color of unselected even tabs.
|<<colors.tabs.even.fg,colors.tabs.even.fg>>|Foreground color of unselected even tabs.
|<<colors.tabs.indicator.error,colors.tabs.indicator.error>>|Color for the tab indicator on errors.
|<<colors.tabs.indicator.start,colors.tabs.indicator.start>>|Color gradient start for the tab indicator.
|<<colors.tabs.indicator.stop,colors.tabs.indicator.stop>>|Color gradient end for the tab indicator.
|<<colors.tabs.indicator.system,colors.tabs.indicator.system>>|Color gradient interpolation system for the tab indicator.
|<<colors.tabs.odd.bg,colors.tabs.odd.bg>>|Background color of unselected odd tabs.
|<<colors.tabs.odd.fg,colors.tabs.odd.fg>>|Foreground color of unselected odd tabs.
|<<colors.tabs.pinned.even.bg,colors.tabs.pinned.even.bg>>|Background color of pinned unselected even tabs.
|<<colors.tabs.pinned.even.fg,colors.tabs.pinned.even.fg>>|Foreground color of pinned unselected even tabs.
|<<colors.tabs.pinned.odd.bg,colors.tabs.pinned.odd.bg>>|Background color of pinned unselected odd tabs.
|<<colors.tabs.pinned.odd.fg,colors.tabs.pinned.odd.fg>>|Foreground color of pinned unselected odd tabs.
|<<colors.tabs.pinned.selected.even.bg,colors.tabs.pinned.selected.even.bg>>|Background color of pinned selected even tabs.
|<<colors.tabs.pinned.selected.even.fg,colors.tabs.pinned.selected.even.fg>>|Foreground color of pinned selected even tabs.
|<<colors.tabs.pinned.selected.odd.bg,colors.tabs.pinned.selected.odd.bg>>|Background color of pinned selected odd tabs.
|<<colors.tabs.pinned.selected.odd.fg,colors.tabs.pinned.selected.odd.fg>>|Foreground color of pinned selected odd tabs.
|<<colors.tabs.selected.even.bg,colors.tabs.selected.even.bg>>|Background color of selected even tabs.
|<<colors.tabs.selected.even.fg,colors.tabs.selected.even.fg>>|Foreground color of selected even tabs.
|<<colors.tabs.selected.odd.bg,colors.tabs.selected.odd.bg>>|Background color of selected odd tabs.
|<<colors.tabs.selected.odd.fg,colors.tabs.selected.odd.fg>>|Foreground color of selected odd tabs.
|<<colors.webpage.bg,colors.webpage.bg>>|Background color for webpages if unset (or empty to use the theme's color).
|<<colors.webpage.darkmode.algorithm,colors.webpage.darkmode.algorithm>>|Which algorithm to use for modifying how colors are rendered with darkmode.
|<<colors.webpage.darkmode.contrast,colors.webpage.darkmode.contrast>>|Contrast for dark mode.
|<<colors.webpage.darkmode.enabled,colors.webpage.darkmode.enabled>>|Render all web contents using a dark theme.
|<<colors.webpage.darkmode.grayscale.all,colors.webpage.darkmode.grayscale.all>>|Render all colors as grayscale.
|<<colors.webpage.darkmode.grayscale.images,colors.webpage.darkmode.grayscale.images>>|Desaturation factor for images in dark mode.
|<<colors.webpage.darkmode.policy.images,colors.webpage.darkmode.policy.images>>|Which images to apply dark mode to.
|<<colors.webpage.darkmode.policy.page,colors.webpage.darkmode.policy.page>>|Which pages to apply dark mode to.
|<<colors.webpage.darkmode.threshold.background,colors.webpage.darkmode.threshold.background>>|Threshold for inverting background elements with dark mode.
|<<colors.webpage.darkmode.threshold.text,colors.webpage.darkmode.threshold.text>>|Threshold for inverting text with dark mode.
|<<colors.webpage.prefers_color_scheme_dark,colors.webpage.prefers_color_scheme_dark>>|Force `prefers-color-scheme: dark` colors for websites.
|<<completion.cmd_history_max_items,completion.cmd_history_max_items>>|Number of commands to save in the command history.
|<<completion.delay,completion.delay>>|Delay (in milliseconds) before updating completions after typing a character.
|<<completion.height,completion.height>>|Height (in pixels or as percentage of the window) of the completion.
|<<completion.min_chars,completion.min_chars>>|Minimum amount of characters needed to update completions.
|<<completion.open_categories,completion.open_categories>>|Which categories to show (in which order) in the :open completion.
|<<completion.quick,completion.quick>>|Move on to the next part when there's only one possible completion left.
|<<completion.scrollbar.padding,completion.scrollbar.padding>>|Padding (in pixels) of the scrollbar handle in the completion window.
|<<completion.scrollbar.width,completion.scrollbar.width>>|Width (in pixels) of the scrollbar in the completion window.
|<<completion.show,completion.show>>|When to show the autocompletion window.
|<<completion.shrink,completion.shrink>>|Shrink the completion to be smaller than the configured size if there are no scrollbars.
|<<completion.timestamp_format,completion.timestamp_format>>|Format of timestamps (e.g. for the history completion).
|<<completion.use_best_match,completion.use_best_match>>|Execute the best-matching command on a partial match.
|<<completion.web_history.exclude,completion.web_history.exclude>>|A list of patterns which should not be shown in the history.
|<<completion.web_history.max_items,completion.web_history.max_items>>|Number of URLs to show in the web history.
|<<confirm_quit,confirm_quit>>|Require a confirmation before quitting the application.
|<<content.autoplay,content.autoplay>>|Automatically start playing `<video>` elements.
|<<content.cache.appcache,content.cache.appcache>>|Enable support for the HTML 5 web application cache feature.
|<<content.cache.maximum_pages,content.cache.maximum_pages>>|Maximum number of pages to hold in the global memory page cache.
|<<content.cache.size,content.cache.size>>|Size (in bytes) of the HTTP network cache. Null to use the default value.
|<<content.canvas_reading,content.canvas_reading>>|Allow websites to read canvas elements.
|<<content.cookies.accept,content.cookies.accept>>|Which cookies to accept.
|<<content.cookies.store,content.cookies.store>>|Store cookies.
|<<content.default_encoding,content.default_encoding>>|Default encoding to use for websites.
|<<content.desktop_capture,content.desktop_capture>>|Allow websites to share screen content.
|<<content.dns_prefetch,content.dns_prefetch>>|Try to pre-fetch DNS entries to speed up browsing.
|<<content.frame_flattening,content.frame_flattening>>|Expand each subframe to its contents.
|<<content.fullscreen.overlay_timeout,content.fullscreen.overlay_timeout>>|Set fullscreen notification overlay timeout in milliseconds.
|<<content.fullscreen.window,content.fullscreen.window>>|Limit fullscreen to the browser window (does not expand to fill the screen).
|<<content.geolocation,content.geolocation>>|Allow websites to request geolocations.
|<<content.headers.accept_language,content.headers.accept_language>>|Value to send in the `Accept-Language` header.
|<<content.headers.custom,content.headers.custom>>|Custom headers for qutebrowser HTTP requests.
|<<content.headers.do_not_track,content.headers.do_not_track>>|Value to send in the `DNT` header.
|<<content.headers.referer,content.headers.referer>>|When to send the Referer header.
|<<content.headers.user_agent,content.headers.user_agent>>|User agent to send.
|<<content.host_blocking.enabled,content.host_blocking.enabled>>|Enable host blocking.
|<<content.host_blocking.lists,content.host_blocking.lists>>|List of URLs of lists which contain hosts to block.
|<<content.host_blocking.whitelist,content.host_blocking.whitelist>>|A list of patterns that should always be loaded, despite being ad-blocked.
|<<content.hyperlink_auditing,content.hyperlink_auditing>>|Enable hyperlink auditing (`<a ping>`).
|<<content.images,content.images>>|Load images automatically in web pages.
|<<content.javascript.alert,content.javascript.alert>>|Show javascript alerts.
|<<content.javascript.can_access_clipboard,content.javascript.can_access_clipboard>>|Allow JavaScript to read from or write to the clipboard.
|<<content.javascript.can_close_tabs,content.javascript.can_close_tabs>>|Allow JavaScript to close tabs.
|<<content.javascript.can_open_tabs_automatically,content.javascript.can_open_tabs_automatically>>|Allow JavaScript to open new tabs without user interaction.
|<<content.javascript.enabled,content.javascript.enabled>>|Enable JavaScript.
|<<content.javascript.log,content.javascript.log>>|Log levels to use for JavaScript console logging messages.
|<<content.javascript.modal_dialog,content.javascript.modal_dialog>>|Use the standard JavaScript modal dialog for `alert()` and `confirm()`.
|<<content.javascript.prompt,content.javascript.prompt>>|Show javascript prompts.
|<<content.local_content_can_access_file_urls,content.local_content_can_access_file_urls>>|Allow locally loaded documents to access other local URLs.
|<<content.local_content_can_access_remote_urls,content.local_content_can_access_remote_urls>>|Allow locally loaded documents to access remote URLs.
|<<content.local_storage,content.local_storage>>|Enable support for HTML 5 local storage and Web SQL.
|<<content.media.audio_capture,content.media.audio_capture>>|Allow websites to record audio.
|<<content.media.audio_video_capture,content.media.audio_video_capture>>|Allow websites to record audio and video.
|<<content.media.video_capture,content.media.video_capture>>|Allow websites to record video.
|<<content.mouse_lock,content.mouse_lock>>|Allow websites to lock your mouse pointer.
|<<content.mute,content.mute>>|Automatically mute tabs.
|<<content.netrc_file,content.netrc_file>>|Netrc-file for HTTP authentication.
|<<content.notifications,content.notifications>>|Allow websites to show notifications.
|<<content.pdfjs,content.pdfjs>>|Allow pdf.js to view PDF files in the browser.
|<<content.persistent_storage,content.persistent_storage>>|Allow websites to request persistent storage quota via `navigator.webkitPersistentStorage.requestQuota`.
|<<content.plugins,content.plugins>>|Enable plugins in Web pages.
|<<content.print_element_backgrounds,content.print_element_backgrounds>>|Draw the background color and images also when the page is printed.
|<<content.private_browsing,content.private_browsing>>|Open new windows in private browsing mode which does not record visited pages.
|<<content.proxy,content.proxy>>|Proxy to use.
|<<content.proxy_dns_requests,content.proxy_dns_requests>>|Send DNS requests over the configured proxy.
|<<content.register_protocol_handler,content.register_protocol_handler>>|Allow websites to register protocol handlers via `navigator.registerProtocolHandler`.
|<<content.site_specific_quirks,content.site_specific_quirks>>|Enable quirks (such as faked user agent headers) needed to get specific sites to work properly.
|<<content.ssl_strict,content.ssl_strict>>|Validate SSL handshakes.
|<<content.unknown_url_scheme_policy,content.unknown_url_scheme_policy>>|How navigation requests to URLs with unknown schemes are handled.
|<<content.user_stylesheets,content.user_stylesheets>>|List of user stylesheet filenames to use.
|<<content.webgl,content.webgl>>|Enable WebGL.
|<<content.webrtc_ip_handling_policy,content.webrtc_ip_handling_policy>>|Which interfaces to expose via WebRTC.
|<<content.xss_auditing,content.xss_auditing>>|Monitor load requests for cross-site scripting attempts.
|<<downloads.location.directory,downloads.location.directory>>|Directory to save downloads to.
|<<downloads.location.prompt,downloads.location.prompt>>|Prompt the user for the download location.
|<<downloads.location.remember,downloads.location.remember>>|Remember the last used download directory.
|<<downloads.location.suggestion,downloads.location.suggestion>>|What to display in the download filename input.
|<<downloads.open_dispatcher,downloads.open_dispatcher>>|Default program used to open downloads.
|<<downloads.position,downloads.position>>|Where to show the downloaded files.
|<<downloads.remove_finished,downloads.remove_finished>>|Duration (in milliseconds) to wait before removing finished downloads.
|<<editor.command,editor.command>>|Editor (and arguments) to use for the `open-editor` command.
|<<editor.encoding,editor.encoding>>|Encoding to use for the editor.
|<<fonts.completion.category,fonts.completion.category>>|Font used in the completion categories.
|<<fonts.completion.entry,fonts.completion.entry>>|Font used in the completion widget.
|<<fonts.contextmenu,fonts.contextmenu>>|Font used for the context menu.
|<<fonts.debug_console,fonts.debug_console>>|Font used for the debugging console.
|<<fonts.default_family,fonts.default_family>>|Default font families to use.
|<<fonts.default_size,fonts.default_size>>|Default font size to use.
|<<fonts.downloads,fonts.downloads>>|Font used for the downloadbar.
|<<fonts.hints,fonts.hints>>|Font used for the hints.
|<<fonts.keyhint,fonts.keyhint>>|Font used in the keyhint widget.
|<<fonts.messages.error,fonts.messages.error>>|Font used for error messages.
|<<fonts.messages.info,fonts.messages.info>>|Font used for info messages.
|<<fonts.messages.warning,fonts.messages.warning>>|Font used for warning messages.
|<<fonts.prompts,fonts.prompts>>|Font used for prompts.
|<<fonts.statusbar,fonts.statusbar>>|Font used in the statusbar.
|<<fonts.tabs.selected,fonts.tabs.selected>>|Font used for selected tabs.
|<<fonts.tabs.unselected,fonts.tabs.unselected>>|Font used for unselected tabs.
|<<fonts.web.family.cursive,fonts.web.family.cursive>>|Font family for cursive fonts.
|<<fonts.web.family.fantasy,fonts.web.family.fantasy>>|Font family for fantasy fonts.
|<<fonts.web.family.fixed,fonts.web.family.fixed>>|Font family for fixed fonts.
|<<fonts.web.family.sans_serif,fonts.web.family.sans_serif>>|Font family for sans-serif fonts.
|<<fonts.web.family.serif,fonts.web.family.serif>>|Font family for serif fonts.
|<<fonts.web.family.standard,fonts.web.family.standard>>|Font family for standard fonts.
|<<fonts.web.size.default,fonts.web.size.default>>|Default font size (in pixels) for regular text.
|<<fonts.web.size.default_fixed,fonts.web.size.default_fixed>>|Default font size (in pixels) for fixed-pitch text.
|<<fonts.web.size.minimum,fonts.web.size.minimum>>|Hard minimum font size (in pixels).
|<<fonts.web.size.minimum_logical,fonts.web.size.minimum_logical>>|Minimum logical font size (in pixels) that is applied when zooming out.
|<<hints.auto_follow,hints.auto_follow>>|When a hint can be automatically followed without pressing Enter.
|<<hints.auto_follow_timeout,hints.auto_follow_timeout>>|Duration (in milliseconds) to ignore normal-mode key bindings after a successful auto-follow.
|<<hints.border,hints.border>>|CSS border value for hints.
|<<hints.chars,hints.chars>>|Characters used for hint strings.
|<<hints.dictionary,hints.dictionary>>|Dictionary file to be used by the word hints.
|<<hints.find_implementation,hints.find_implementation>>|Which implementation to use to find elements to hint.
|<<hints.hide_unmatched_rapid_hints,hints.hide_unmatched_rapid_hints>>|Hide unmatched hints in rapid mode.
|<<hints.leave_on_load,hints.leave_on_load>>|Leave hint mode when starting a new page load.
|<<hints.min_chars,hints.min_chars>>|Minimum number of characters used for hint strings.
|<<hints.mode,hints.mode>>|Mode to use for hints.
|<<hints.next_regexes,hints.next_regexes>>|Comma-separated list of regular expressions to use for 'next' links.
|<<hints.padding,hints.padding>>|Padding (in pixels) for hints.
|<<hints.prev_regexes,hints.prev_regexes>>|Comma-separated list of regular expressions to use for 'prev' links.
|<<hints.radius,hints.radius>>|Rounding radius (in pixels) for the edges of hints.
|<<hints.scatter,hints.scatter>>|Scatter hint key chains (like Vimium) or not (like dwb).
|<<hints.selectors,hints.selectors>>|CSS selectors used to determine which elements on a page should have hints.
|<<hints.uppercase,hints.uppercase>>|Make characters in hint strings uppercase.
|<<history_gap_interval,history_gap_interval>>|Maximum time (in minutes) between two history items for them to be considered being from the same browsing session.
|<<input.escape_quits_reporter,input.escape_quits_reporter>>|Allow Escape to quit the crash reporter.
|<<input.forward_unbound_keys,input.forward_unbound_keys>>|Which unbound keys to forward to the webview in normal mode.
|<<input.insert_mode.auto_enter,input.insert_mode.auto_enter>>|Enter insert mode if an editable element is clicked.
|<<input.insert_mode.auto_leave,input.insert_mode.auto_leave>>|Leave insert mode if a non-editable element is clicked.
|<<input.insert_mode.auto_load,input.insert_mode.auto_load>>|Automatically enter insert mode if an editable element is focused after loading the page.
|<<input.insert_mode.leave_on_load,input.insert_mode.leave_on_load>>|Leave insert mode when starting a new page load.
|<<input.insert_mode.plugins,input.insert_mode.plugins>>|Switch to insert mode when clicking flash and other plugins.
|<<input.links_included_in_focus_chain,input.links_included_in_focus_chain>>|Include hyperlinks in the keyboard focus chain when tabbing.
|<<input.mouse.back_forward_buttons,input.mouse.back_forward_buttons>>|Enable back and forward buttons on the mouse.
|<<input.mouse.rocker_gestures,input.mouse.rocker_gestures>>|Enable Opera-like mouse rocker gestures.
|<<input.partial_timeout,input.partial_timeout>>|Timeout (in milliseconds) for partially typed key bindings.
|<<input.spatial_navigation,input.spatial_navigation>>|Enable spatial navigation.
|<<keyhint.blacklist,keyhint.blacklist>>|Keychains that shouldn't be shown in the keyhint dialog.
|<<keyhint.delay,keyhint.delay>>|Time (in milliseconds) from pressing a key to seeing the keyhint dialog.
|<<keyhint.radius,keyhint.radius>>|Rounding radius (in pixels) for the edges of the keyhint dialog.
|<<logging.level.console,logging.level.console>>|Level for console (stdout/stderr) logs. Ignored if the `--loglevel` or `--debug` CLI flags are used.
|<<logging.level.ram,logging.level.ram>>|Level for in-memory logs.
|<<messages.timeout,messages.timeout>>|Duration (in milliseconds) to show messages in the statusbar for.
|<<new_instance_open_target,new_instance_open_target>>|How to open links in an existing instance if a new one is launched.
|<<new_instance_open_target_window,new_instance_open_target_window>>|Which window to choose when opening links as new tabs.
|<<prompt.filebrowser,prompt.filebrowser>>|Show a filebrowser in download prompts.
|<<prompt.radius,prompt.radius>>|Rounding radius (in pixels) for the edges of prompts.
|<<qt.args,qt.args>>|Additional arguments to pass to Qt, without leading `--`.
|<<qt.force_platform,qt.force_platform>>|Force a Qt platform to use.
|<<qt.force_platformtheme,qt.force_platformtheme>>|Force a Qt platformtheme to use.
|<<qt.force_software_rendering,qt.force_software_rendering>>|Force software rendering for QtWebEngine.
|<<qt.highdpi,qt.highdpi>>|Turn on Qt HighDPI scaling.
|<<qt.low_end_device_mode,qt.low_end_device_mode>>|When to use Chromium's low-end device mode.
|<<qt.process_model,qt.process_model>>|Which Chromium process model to use.
|<<scrolling.bar,scrolling.bar>>|When/how to show the scrollbar.
|<<scrolling.smooth,scrolling.smooth>>|Enable smooth scrolling for web pages.
|<<search.ignore_case,search.ignore_case>>|When to find text on a page case-insensitively.
|<<search.incremental,search.incremental>>|Find text on a page incrementally, renewing the search for each typed character.
|<<search.wrap,search.wrap>>|Wrap around at the top and bottom of the page when advancing through text matches using `:search-next` and `:search-prev`.
|<<session.default_name,session.default_name>>|Name of the session to save by default.
|<<session.lazy_restore,session.lazy_restore>>|Load a restored tab as soon as it takes focus.
|<<spellcheck.languages,spellcheck.languages>>|Languages to use for spell checking.
|<<statusbar.padding,statusbar.padding>>|Padding (in pixels) for the statusbar.
|<<statusbar.position,statusbar.position>>|Position of the status bar.
|<<statusbar.show,statusbar.show>>|When to show the statusbar.
|<<statusbar.widgets,statusbar.widgets>>|List of widgets displayed in the statusbar.
|<<tabs.background,tabs.background>>|Open new tabs (middleclick/ctrl+click) in the background.
|<<tabs.close_mouse_button,tabs.close_mouse_button>>|Mouse button with which to close tabs.
|<<tabs.close_mouse_button_on_bar,tabs.close_mouse_button_on_bar>>|How to behave when the close mouse button is pressed on the tab bar.
|<<tabs.favicons.scale,tabs.favicons.scale>>|Scaling factor for favicons in the tab bar.
|<<tabs.favicons.show,tabs.favicons.show>>|When to show favicons in the tab bar.
|<<tabs.focus_stack_size,tabs.focus_stack_size>>|Maximum stack size to remember for tab switches (-1 for no maximum).
|<<tabs.indicator.padding,tabs.indicator.padding>>|Padding (in pixels) for tab indicators.
|<<tabs.indicator.width,tabs.indicator.width>>|Width (in pixels) of the progress indicator (0 to disable).
|<<tabs.last_close,tabs.last_close>>|How to behave when the last tab is closed.
|<<tabs.max_width,tabs.max_width>>|Maximum width (in pixels) of tabs (-1 for no maximum).
|<<tabs.min_width,tabs.min_width>>|Minimum width (in pixels) of tabs (-1 for the default minimum size behavior).
|<<tabs.mode_on_change,tabs.mode_on_change>>|When switching tabs, what input mode is applied.
|<<tabs.mousewheel_switching,tabs.mousewheel_switching>>|Switch between tabs using the mouse wheel.
|<<tabs.new_position.related,tabs.new_position.related>>|Position of new tabs opened from another tab.
|<<tabs.new_position.stacking,tabs.new_position.stacking>>|Stack related tabs on top of each other when opened consecutively.
|<<tabs.new_position.unrelated,tabs.new_position.unrelated>>|Position of new tabs which are not opened from another tab.
|<<tabs.padding,tabs.padding>>|Padding (in pixels) around text for tabs.
|<<tabs.pinned.frozen,tabs.pinned.frozen>>|Force pinned tabs to stay at fixed URL.
|<<tabs.pinned.shrink,tabs.pinned.shrink>>|Shrink pinned tabs down to their contents.
|<<tabs.position,tabs.position>>|Position of the tab bar.
|<<tabs.select_on_remove,tabs.select_on_remove>>|Which tab to select when the focused tab is removed.
|<<tabs.show,tabs.show>>|When to show the tab bar.
|<<tabs.show_switching_delay,tabs.show_switching_delay>>|Duration (in milliseconds) to show the tab bar before hiding it when tabs.show is set to 'switching'.
|<<tabs.tabs_are_windows,tabs.tabs_are_windows>>|Open a new window for every tab.
|<<tabs.title.alignment,tabs.title.alignment>>|Alignment of the text inside of tabs.
|<<tabs.title.format,tabs.title.format>>|Format to use for the tab title.
|<<tabs.title.format_pinned,tabs.title.format_pinned>>|Format to use for the tab title for pinned tabs. The same placeholders like for `tabs.title.format` are defined.
|<<tabs.tooltips,tabs.tooltips>>|Show tooltips on tabs.
|<<tabs.undo_stack_size,tabs.undo_stack_size>>|Number of closed tabs (per window) and closed windows to remember for :undo (-1 for no maximum).
|<<tabs.width,tabs.width>>|Width (in pixels or as percentage of the window) of the tab bar if it's vertical.
|<<tabs.wrap,tabs.wrap>>|Wrap when changing tabs.
|<<url.auto_search,url.auto_search>>|What search to start when something else than a URL is entered.
|<<url.default_page,url.default_page>>|Page to open if :open -t/-b/-w is used without URL.
|<<url.incdec_segments,url.incdec_segments>>|URL segments where `:navigate increment/decrement` will search for a number.
|<<url.open_base_url,url.open_base_url>>|Open base URL of the searchengine if a searchengine shortcut is invoked without parameters.
|<<url.searchengines,url.searchengines>>|Search engines which can be used via the address bar.
|<<url.start_pages,url.start_pages>>|Page(s) to open at the start.
|<<url.yank_ignored_parameters,url.yank_ignored_parameters>>|URL parameters to strip with `:yank url`.
|<<window.hide_decoration,window.hide_decoration>>|Hide the window decoration.
|<<window.title_format,window.title_format>>|Format to use for the window title. The same placeholders like for
|<<zoom.default,zoom.default>>|Default zoom level.
|<<zoom.levels,zoom.levels>>|Available zoom levels.
|<<zoom.mouse_divider,zoom.mouse_divider>>|Number of zoom increments to divide the mouse wheel movements to.
|<<zoom.text_only,zoom.text_only>>|Apply the zoom factor on a frame only to the text or to all content.
|==============

[[aliases]]
=== aliases
Aliases for commands.
The keys of the given dictionary are the aliases, while the values are the commands they map to.

Type: <<types,Dict>>

Default: 

- +pass:[q]+: +pass:[close]+
- +pass:[qa]+: +pass:[quit]+
- +pass:[w]+: +pass:[session-save]+
- +pass:[wq]+: +pass:[quit --save]+
- +pass:[wqa]+: +pass:[quit --save]+

[[auto_save.interval]]
=== auto_save.interval
Time interval (in milliseconds) between auto-saves of config/cookies/etc.

Type: <<types,Int>>

Default: +pass:[15000]+

[[auto_save.session]]
=== auto_save.session
Always restore open sites when qutebrowser is reopened.
Without this option set, `:wq` (`:quit --save`) needs to be used to save open tabs (and restore them), while quitting qutebrowser in any other way will not save/restore the session.
By default, this will save to the session which was last loaded. This behavior can be customized via the `session.default_name` setting.

Type: <<types,Bool>>

Default: +pass:[false]+

[[backend]]
=== backend
Backend to use to display websites.
qutebrowser supports two different web rendering engines / backends, QtWebKit and QtWebEngine.
QtWebKit was discontinued by the Qt project with Qt 5.6, but picked up as a well maintained fork: https://github.com/annulen/webkit/wiki - qutebrowser only supports the fork.
QtWebEngine is Qt's official successor to QtWebKit. It's slightly more resource hungry than QtWebKit and has a couple of missing features in qutebrowser, but is generally the preferred choice.

This setting requires a restart.

Type: <<types,String>>

Valid values:

 * +webengine+: Use QtWebEngine (based on Chromium).
 * +webkit+: Use QtWebKit (based on WebKit, similar to Safari).

Default: +pass:[webengine]+

[[bindings.commands]]
=== bindings.commands
Keybindings mapping keys to commands in different modes.
While it's possible to add bindings with this setting, it's recommended to use `config.bind()` in `config.py` or the `:bind` command, and leave this setting alone.
This setting is a dictionary containing mode names and dictionaries mapping keys to commands:
`{mode: {key: command}}`
If you want to map a key to another key, check the `bindings.key_mappings` setting instead.
For modifiers, you can use either `-` or `+` as delimiters, and these names:

  * Control: `Control`, `Ctrl`

  * Meta:    `Meta`, `Windows`, `Mod4`

  * Alt:     `Alt`, `Mod1`

  * Shift:   `Shift`

For simple keys (no `<>`-signs), a capital letter means the key is pressed with Shift. For special keys (with `<>`-signs), you need to explicitly add `Shift-` to match a key pressed with shift.
If you want a binding to do nothing, bind it to the `nop` command. If you want a default binding to be passed through to the website, bind it to null.
Note that some commands which are only useful for bindings (but not used interactively) are hidden from the command completion. See `:help` for a full list of available commands.
The following modes are available:

* normal: Default mode, where most commands are invoked.

* insert: Entered when an input field is focused on a website, or by
  pressing `i` in normal mode. Passes through almost all keypresses to the
  website, but has some bindings like `<Ctrl-e>` to open an external
  editor. Note that single keys can't be bound in this mode.

* hint: Entered when `f` is pressed to select links with the keyboard. Note
  that single keys can't be bound in this mode.

* passthrough: Similar to insert mode, but passes through all keypresses
  except `<Escape>` to leave the mode. It might be useful to bind
  `<Escape>` to some other key in this mode if you want to be able to send
  an Escape key to the website as well. Note that single keys can't be
  bound in this mode.

* command: Entered when pressing the `:` key in order to enter a command.
  Note that single keys can't be bound in this mode.

* prompt: Entered when there's a prompt to display, like for download
  locations or when invoked from JavaScript.

* yesno: Entered when there's a yes/no prompt displayed.
* caret: Entered when pressing the `v` mode, used to select text using the
  keyboard.

* register: Entered when qutebrowser is waiting for a register name/key for
  commands like `:set-mark`.

Type: <<types,Dict>>

Default: empty

[[bindings.default]]
=== bindings.default
Default keybindings. If you want to add bindings, modify `bindings.commands` instead.
The main purpose of this setting is that you can set it to an empty dictionary if you want to load no default keybindings at all.
If you want to preserve default bindings (and get new bindings when there is an update), use `config.bind()` in `config.py` or the `:bind` command, and leave this setting alone.

This setting can only be set in config.py.

Type: <<types,Dict>>

Default: 

- +pass:[caret]+:

* +pass:[$]+: +pass:[move-to-end-of-line]+
* +pass:[0]+: +pass:[move-to-start-of-line]+
* +pass:[&lt;Ctrl-Space&gt;]+: +pass:[drop-selection]+
* +pass:[&lt;Escape&gt;]+: +pass:[leave-mode]+
* +pass:[&lt;Return&gt;]+: +pass:[yank selection]+
* +pass:[&lt;Space&gt;]+: +pass:[toggle-selection]+
* +pass:[G]+: +pass:[move-to-end-of-document]+
* +pass:[H]+: +pass:[scroll left]+
* +pass:[J]+: +pass:[scroll down]+
* +pass:[K]+: +pass:[scroll up]+
* +pass:[L]+: +pass:[scroll right]+
* +pass:[V]+: +pass:[toggle-selection --line]+
* +pass:[Y]+: +pass:[yank selection -s]+
* +pass:[[]+: +pass:[move-to-start-of-prev-block]+
* +pass:[]]+: +pass:[move-to-start-of-next-block]+
* +pass:[b]+: +pass:[move-to-prev-word]+
* +pass:[c]+: +pass:[enter-mode normal]+
* +pass:[e]+: +pass:[move-to-end-of-word]+
* +pass:[gg]+: +pass:[move-to-start-of-document]+
* +pass:[h]+: +pass:[move-to-prev-char]+
* +pass:[j]+: +pass:[move-to-next-line]+
* +pass:[k]+: +pass:[move-to-prev-line]+
* +pass:[l]+: +pass:[move-to-next-char]+
* +pass:[o]+: +pass:[reverse-selection]+
* +pass:[v]+: +pass:[toggle-selection]+
* +pass:[w]+: +pass:[move-to-next-word]+
* +pass:[y]+: +pass:[yank selection]+
* +pass:[{]+: +pass:[move-to-end-of-prev-block]+
* +pass:[}]+: +pass:[move-to-end-of-next-block]+
- +pass:[command]+:

* +pass:[&lt;Alt-B&gt;]+: +pass:[rl-backward-word]+
* +pass:[&lt;Alt-Backspace&gt;]+: +pass:[rl-backward-kill-word]+
* +pass:[&lt;Alt-D&gt;]+: +pass:[rl-kill-word]+
* +pass:[&lt;Alt-F&gt;]+: +pass:[rl-forward-word]+
* +pass:[&lt;Ctrl-?&gt;]+: +pass:[rl-delete-char]+
* +pass:[&lt;Ctrl-A&gt;]+: +pass:[rl-beginning-of-line]+
* +pass:[&lt;Ctrl-B&gt;]+: +pass:[rl-backward-char]+
* +pass:[&lt;Ctrl-C&gt;]+: +pass:[completion-item-yank]+
* +pass:[&lt;Ctrl-D&gt;]+: +pass:[completion-item-del]+
* +pass:[&lt;Ctrl-E&gt;]+: +pass:[rl-end-of-line]+
* +pass:[&lt;Ctrl-F&gt;]+: +pass:[rl-forward-char]+
* +pass:[&lt;Ctrl-H&gt;]+: +pass:[rl-backward-delete-char]+
* +pass:[&lt;Ctrl-K&gt;]+: +pass:[rl-kill-line]+
* +pass:[&lt;Ctrl-N&gt;]+: +pass:[command-history-next]+
* +pass:[&lt;Ctrl-P&gt;]+: +pass:[command-history-prev]+
* +pass:[&lt;Ctrl-Return&gt;]+: +pass:[command-accept --rapid]+
* +pass:[&lt;Ctrl-Shift-C&gt;]+: +pass:[completion-item-yank --sel]+
* +pass:[&lt;Ctrl-Shift-Tab&gt;]+: +pass:[completion-item-focus prev-category]+
* +pass:[&lt;Ctrl-Tab&gt;]+: +pass:[completion-item-focus next-category]+
* +pass:[&lt;Ctrl-U&gt;]+: +pass:[rl-unix-line-discard]+
* +pass:[&lt;Ctrl-W&gt;]+: +pass:[rl-unix-word-rubout]+
* +pass:[&lt;Ctrl-Y&gt;]+: +pass:[rl-yank]+
* +pass:[&lt;Down&gt;]+: +pass:[completion-item-focus --history next]+
* +pass:[&lt;Escape&gt;]+: +pass:[leave-mode]+
* +pass:[&lt;PgDown&gt;]+: +pass:[completion-item-focus next-page]+
* +pass:[&lt;PgUp&gt;]+: +pass:[completion-item-focus prev-page]+
* +pass:[&lt;Return&gt;]+: +pass:[command-accept]+
* +pass:[&lt;Shift-Delete&gt;]+: +pass:[completion-item-del]+
* +pass:[&lt;Shift-Tab&gt;]+: +pass:[completion-item-focus prev]+
* +pass:[&lt;Tab&gt;]+: +pass:[completion-item-focus next]+
* +pass:[&lt;Up&gt;]+: +pass:[completion-item-focus --history prev]+
- +pass:[hint]+:

* +pass:[&lt;Ctrl-B&gt;]+: +pass:[hint all tab-bg]+
* +pass:[&lt;Ctrl-F&gt;]+: +pass:[hint links]+
* +pass:[&lt;Ctrl-R&gt;]+: +pass:[hint --rapid links tab-bg]+
* +pass:[&lt;Escape&gt;]+: +pass:[leave-mode]+
* +pass:[&lt;Return&gt;]+: +pass:[follow-hint]+
- +pass:[insert]+:

* +pass:[&lt;Ctrl-E&gt;]+: +pass:[open-editor]+
* +pass:[&lt;Escape&gt;]+: +pass:[leave-mode]+
* +pass:[&lt;Shift-Ins&gt;]+: +pass:[insert-text -- {primary}]+
- +pass:[normal]+:

* +pass:[&#x27;]+: +pass:[enter-mode jump_mark]+
* +pass:[+]+: +pass:[zoom-in]+
* +pass:[-]+: +pass:[zoom-out]+
* +pass:[.]+: +pass:[repeat-command]+
* +pass:[/]+: +pass:[set-cmd-text /]+
* +pass:[:]+: +pass:[set-cmd-text :]+
* +pass:[;I]+: +pass:[hint images tab]+
* +pass:[;O]+: +pass:[hint links fill :open -t -r {hint-url}]+
* +pass:[;R]+: +pass:[hint --rapid links window]+
* +pass:[;Y]+: +pass:[hint links yank-primary]+
* +pass:[;b]+: +pass:[hint all tab-bg]+
* +pass:[;d]+: +pass:[hint links download]+
* +pass:[;f]+: +pass:[hint all tab-fg]+
* +pass:[;h]+: +pass:[hint all hover]+
* +pass:[;i]+: +pass:[hint images]+
* +pass:[;o]+: +pass:[hint links fill :open {hint-url}]+
* +pass:[;r]+: +pass:[hint --rapid links tab-bg]+
* +pass:[;t]+: +pass:[hint inputs]+
* +pass:[;y]+: +pass:[hint links yank]+
* +pass:[&lt;Alt-1&gt;]+: +pass:[tab-focus 1]+
* +pass:[&lt;Alt-2&gt;]+: +pass:[tab-focus 2]+
* +pass:[&lt;Alt-3&gt;]+: +pass:[tab-focus 3]+
* +pass:[&lt;Alt-4&gt;]+: +pass:[tab-focus 4]+
* +pass:[&lt;Alt-5&gt;]+: +pass:[tab-focus 5]+
* +pass:[&lt;Alt-6&gt;]+: +pass:[tab-focus 6]+
* +pass:[&lt;Alt-7&gt;]+: +pass:[tab-focus 7]+
* +pass:[&lt;Alt-8&gt;]+: +pass:[tab-focus 8]+
* +pass:[&lt;Alt-9&gt;]+: +pass:[tab-focus -1]+
* +pass:[&lt;Alt-m&gt;]+: +pass:[tab-mute]+
* +pass:[&lt;Ctrl-A&gt;]+: +pass:[navigate increment]+
* +pass:[&lt;Ctrl-Alt-p&gt;]+: +pass:[print]+
* +pass:[&lt;Ctrl-B&gt;]+: +pass:[scroll-page 0 -1]+
* +pass:[&lt;Ctrl-D&gt;]+: +pass:[scroll-page 0 0.5]+
* +pass:[&lt;Ctrl-F5&gt;]+: +pass:[reload -f]+
* +pass:[&lt;Ctrl-F&gt;]+: +pass:[scroll-page 0 1]+
* +pass:[&lt;Ctrl-N&gt;]+: +pass:[open -w]+
* +pass:[&lt;Ctrl-PgDown&gt;]+: +pass:[tab-next]+
* +pass:[&lt;Ctrl-PgUp&gt;]+: +pass:[tab-prev]+
* +pass:[&lt;Ctrl-Q&gt;]+: +pass:[quit]+
* +pass:[&lt;Ctrl-Return&gt;]+: +pass:[follow-selected -t]+
* +pass:[&lt;Ctrl-Shift-N&gt;]+: +pass:[open -p]+
* +pass:[&lt;Ctrl-Shift-T&gt;]+: +pass:[undo]+
* +pass:[&lt;Ctrl-Shift-Tab&gt;]+: +pass:[nop]+
* +pass:[&lt;Ctrl-Shift-W&gt;]+: +pass:[close]+
* +pass:[&lt;Ctrl-T&gt;]+: +pass:[open -t]+
* +pass:[&lt;Ctrl-Tab&gt;]+: +pass:[tab-focus last]+
* +pass:[&lt;Ctrl-U&gt;]+: +pass:[scroll-page 0 -0.5]+
* +pass:[&lt;Ctrl-V&gt;]+: +pass:[enter-mode passthrough]+
* +pass:[&lt;Ctrl-W&gt;]+: +pass:[tab-close]+
* +pass:[&lt;Ctrl-X&gt;]+: +pass:[navigate decrement]+
* +pass:[&lt;Ctrl-^&gt;]+: +pass:[tab-focus last]+
* +pass:[&lt;Ctrl-h&gt;]+: +pass:[home]+
* +pass:[&lt;Ctrl-p&gt;]+: +pass:[tab-pin]+
* +pass:[&lt;Ctrl-s&gt;]+: +pass:[stop]+
* +pass:[&lt;Escape&gt;]+: +pass:[clear-keychain ;; search ;; fullscreen --leave]+
* +pass:[&lt;F11&gt;]+: +pass:[fullscreen]+
* +pass:[&lt;F5&gt;]+: +pass:[reload]+
* +pass:[&lt;Return&gt;]+: +pass:[follow-selected]+
* +pass:[&lt;back&gt;]+: +pass:[back]+
* +pass:[&lt;forward&gt;]+: +pass:[forward]+
* +pass:[=]+: +pass:[zoom]+
* +pass:[?]+: +pass:[set-cmd-text ?]+
* +pass:[@]+: +pass:[run-macro]+
* +pass:[B]+: +pass:[set-cmd-text -s :quickmark-load -t]+
* +pass:[D]+: +pass:[tab-close -o]+
* +pass:[F]+: +pass:[hint all tab]+
* +pass:[G]+: +pass:[scroll-to-perc]+
* +pass:[H]+: +pass:[back]+
* +pass:[J]+: +pass:[tab-next]+
* +pass:[K]+: +pass:[tab-prev]+
* +pass:[L]+: +pass:[forward]+
* +pass:[M]+: +pass:[bookmark-add]+
* +pass:[N]+: +pass:[search-prev]+
* +pass:[O]+: +pass:[set-cmd-text -s :open -t]+
* +pass:[PP]+: +pass:[open -t -- {primary}]+
* +pass:[Pp]+: +pass:[open -t -- {clipboard}]+
* +pass:[R]+: +pass:[reload -f]+
* +pass:[Sb]+: +pass:[open qute://bookmarks#bookmarks]+
* +pass:[Sh]+: +pass:[open qute://history]+
* +pass:[Sq]+: +pass:[open qute://bookmarks]+
* +pass:[Ss]+: +pass:[open qute://settings]+
* +pass:[T]+: +pass:[tab-focus]+
* +pass:[U]+: +pass:[undo -w]+
* +pass:[V]+: +pass:[enter-mode caret ;; toggle-selection --line]+
* +pass:[ZQ]+: +pass:[quit]+
* +pass:[ZZ]+: +pass:[quit --save]+
* +pass:[[[]+: +pass:[navigate prev]+
* +pass:[]]]+: +pass:[navigate next]+
* +pass:[`]+: +pass:[enter-mode set_mark]+
* +pass:[ad]+: +pass:[download-cancel]+
* +pass:[b]+: +pass:[set-cmd-text -s :quickmark-load]+
* +pass:[cd]+: +pass:[download-clear]+
* +pass:[co]+: +pass:[tab-only]+
* +pass:[d]+: +pass:[tab-close]+
* +pass:[f]+: +pass:[hint]+
* +pass:[g$]+: +pass:[tab-focus -1]+
* +pass:[g0]+: +pass:[tab-focus 1]+
* +pass:[gB]+: +pass:[set-cmd-text -s :bookmark-load -t]+
* +pass:[gC]+: +pass:[tab-clone]+
* +pass:[gD]+: +pass:[tab-give]+
* +pass:[gO]+: +pass:[set-cmd-text :open -t -r {url:pretty}]+
* +pass:[gU]+: +pass:[navigate up -t]+
* +pass:[g^]+: +pass:[tab-focus 1]+
* +pass:[ga]+: +pass:[open -t]+
* +pass:[gb]+: +pass:[set-cmd-text -s :bookmark-load]+
* +pass:[gd]+: +pass:[download]+
* +pass:[gf]+: +pass:[view-source]+
* +pass:[gg]+: +pass:[scroll-to-perc 0]+
* +pass:[gi]+: +pass:[hint inputs --first]+
* +pass:[gl]+: +pass:[tab-move -]+
* +pass:[gm]+: +pass:[tab-move]+
* +pass:[go]+: +pass:[set-cmd-text :open {url:pretty}]+
* +pass:[gr]+: +pass:[tab-move +]+
* +pass:[gt]+: +pass:[set-cmd-text -s :buffer]+
* +pass:[gu]+: +pass:[navigate up]+
* +pass:[h]+: +pass:[scroll left]+
* +pass:[i]+: +pass:[enter-mode insert]+
* +pass:[j]+: +pass:[scroll down]+
* +pass:[k]+: +pass:[scroll up]+
* +pass:[l]+: +pass:[scroll right]+
* +pass:[m]+: +pass:[quickmark-save]+
* +pass:[n]+: +pass:[search-next]+
* +pass:[o]+: +pass:[set-cmd-text -s :open]+
* +pass:[pP]+: +pass:[open -- {primary}]+
* +pass:[pp]+: +pass:[open -- {clipboard}]+
* +pass:[q]+: +pass:[record-macro]+
* +pass:[r]+: +pass:[reload]+
* +pass:[sf]+: +pass:[save]+
* +pass:[sk]+: +pass:[set-cmd-text -s :bind]+
* +pass:[sl]+: +pass:[set-cmd-text -s :set -t]+
* +pass:[ss]+: +pass:[set-cmd-text -s :set]+
* +pass:[tCH]+: +pass:[config-cycle -p -u *://*.{url:host}/* content.cookies.accept all no-3rdparty never ;; reload]+
* +pass:[tCh]+: +pass:[config-cycle -p -u *://{url:host}/* content.cookies.accept all no-3rdparty never ;; reload]+
* +pass:[tCu]+: +pass:[config-cycle -p -u {url} content.cookies.accept all no-3rdparty never ;; reload]+
* +pass:[tIH]+: +pass:[config-cycle -p -u *://*.{url:host}/* content.images ;; reload]+
* +pass:[tIh]+: +pass:[config-cycle -p -u *://{url:host}/* content.images ;; reload]+
* +pass:[tIu]+: +pass:[config-cycle -p -u {url} content.images ;; reload]+
* +pass:[tPH]+: +pass:[config-cycle -p -u *://*.{url:host}/* content.plugins ;; reload]+
* +pass:[tPh]+: +pass:[config-cycle -p -u *://{url:host}/* content.plugins ;; reload]+
* +pass:[tPu]+: +pass:[config-cycle -p -u {url} content.plugins ;; reload]+
* +pass:[tSH]+: +pass:[config-cycle -p -u *://*.{url:host}/* content.javascript.enabled ;; reload]+
* +pass:[tSh]+: +pass:[config-cycle -p -u *://{url:host}/* content.javascript.enabled ;; reload]+
* +pass:[tSu]+: +pass:[config-cycle -p -u {url} content.javascript.enabled ;; reload]+
* +pass:[tcH]+: +pass:[config-cycle -p -t -u *://*.{url:host}/* content.cookies.accept all no-3rdparty never ;; reload]+
* +pass:[tch]+: +pass:[config-cycle -p -t -u *://{url:host}/* content.cookies.accept all no-3rdparty never ;; reload]+
* +pass:[tcu]+: +pass:[config-cycle -p -t -u {url} content.cookies.accept all no-3rdparty never ;; reload]+
* +pass:[th]+: +pass:[back -t]+
* +pass:[tiH]+: +pass:[config-cycle -p -t -u *://*.{url:host}/* content.images ;; reload]+
* +pass:[tih]+: +pass:[config-cycle -p -t -u *://{url:host}/* content.images ;; reload]+
* +pass:[tiu]+: +pass:[config-cycle -p -t -u {url} content.images ;; reload]+
* +pass:[tl]+: +pass:[forward -t]+
* +pass:[tpH]+: +pass:[config-cycle -p -t -u *://*.{url:host}/* content.plugins ;; reload]+
* +pass:[tph]+: +pass:[config-cycle -p -t -u *://{url:host}/* content.plugins ;; reload]+
* +pass:[tpu]+: +pass:[config-cycle -p -t -u {url} content.plugins ;; reload]+
* +pass:[tsH]+: +pass:[config-cycle -p -t -u *://*.{url:host}/* content.javascript.enabled ;; reload]+
* +pass:[tsh]+: +pass:[config-cycle -p -t -u *://{url:host}/* content.javascript.enabled ;; reload]+
* +pass:[tsu]+: +pass:[config-cycle -p -t -u {url} content.javascript.enabled ;; reload]+
* +pass:[u]+: +pass:[undo]+
* +pass:[v]+: +pass:[enter-mode caret]+
* +pass:[wB]+: +pass:[set-cmd-text -s :bookmark-load -w]+
* +pass:[wIf]+: +pass:[devtools-focus]+
* +pass:[wIh]+: +pass:[devtools left]+
* +pass:[wIj]+: +pass:[devtools bottom]+
* +pass:[wIk]+: +pass:[devtools top]+
* +pass:[wIl]+: +pass:[devtools right]+
* +pass:[wIw]+: +pass:[devtools window]+
* +pass:[wO]+: +pass:[set-cmd-text :open -w {url:pretty}]+
* +pass:[wP]+: +pass:[open -w -- {primary}]+
* +pass:[wb]+: +pass:[set-cmd-text -s :quickmark-load -w]+
* +pass:[wf]+: +pass:[hint all window]+
* +pass:[wh]+: +pass:[back -w]+
* +pass:[wi]+: +pass:[devtools]+
* +pass:[wl]+: +pass:[forward -w]+
* +pass:[wo]+: +pass:[set-cmd-text -s :open -w]+
* +pass:[wp]+: +pass:[open -w -- {clipboard}]+
* +pass:[xO]+: +pass:[set-cmd-text :open -b -r {url:pretty}]+
* +pass:[xo]+: +pass:[set-cmd-text -s :open -b]+
* +pass:[yD]+: +pass:[yank domain -s]+
* +pass:[yM]+: +pass:[yank inline [{title}]({url}) -s]+
* +pass:[yP]+: +pass:[yank pretty-url -s]+
* +pass:[yT]+: +pass:[yank title -s]+
* +pass:[yY]+: +pass:[yank -s]+
* +pass:[yd]+: +pass:[yank domain]+
* +pass:[ym]+: +pass:[yank inline [{title}]({url})]+
* +pass:[yp]+: +pass:[yank pretty-url]+
* +pass:[yt]+: +pass:[yank title]+
* +pass:[yy]+: +pass:[yank]+
* +pass:[{{]+: +pass:[navigate prev -t]+
* +pass:[}}]+: +pass:[navigate next -t]+
- +pass:[passthrough]+:

* +pass:[&lt;Shift-Escape&gt;]+: +pass:[leave-mode]+
- +pass:[prompt]+:

* +pass:[&lt;Alt-B&gt;]+: +pass:[rl-backward-word]+
* +pass:[&lt;Alt-Backspace&gt;]+: +pass:[rl-backward-kill-word]+
* +pass:[&lt;Alt-D&gt;]+: +pass:[rl-kill-word]+
* +pass:[&lt;Alt-F&gt;]+: +pass:[rl-forward-word]+
* +pass:[&lt;Alt-Shift-Y&gt;]+: +pass:[prompt-yank --sel]+
* +pass:[&lt;Alt-Y&gt;]+: +pass:[prompt-yank]+
* +pass:[&lt;Ctrl-?&gt;]+: +pass:[rl-delete-char]+
* +pass:[&lt;Ctrl-A&gt;]+: +pass:[rl-beginning-of-line]+
* +pass:[&lt;Ctrl-B&gt;]+: +pass:[rl-backward-char]+
* +pass:[&lt;Ctrl-E&gt;]+: +pass:[rl-end-of-line]+
* +pass:[&lt;Ctrl-F&gt;]+: +pass:[rl-forward-char]+
* +pass:[&lt;Ctrl-H&gt;]+: +pass:[rl-backward-delete-char]+
* +pass:[&lt;Ctrl-K&gt;]+: +pass:[rl-kill-line]+
* +pass:[&lt;Ctrl-P&gt;]+: +pass:[prompt-open-download --pdfjs]+
* +pass:[&lt;Ctrl-U&gt;]+: +pass:[rl-unix-line-discard]+
* +pass:[&lt;Ctrl-W&gt;]+: +pass:[rl-unix-word-rubout]+
* +pass:[&lt;Ctrl-X&gt;]+: +pass:[prompt-open-download]+
* +pass:[&lt;Ctrl-Y&gt;]+: +pass:[rl-yank]+
* +pass:[&lt;Down&gt;]+: +pass:[prompt-item-focus next]+
* +pass:[&lt;Escape&gt;]+: +pass:[leave-mode]+
* +pass:[&lt;Return&gt;]+: +pass:[prompt-accept]+
* +pass:[&lt;Shift-Tab&gt;]+: +pass:[prompt-item-focus prev]+
* +pass:[&lt;Tab&gt;]+: +pass:[prompt-item-focus next]+
* +pass:[&lt;Up&gt;]+: +pass:[prompt-item-focus prev]+
- +pass:[register]+:

* +pass:[&lt;Escape&gt;]+: +pass:[leave-mode]+
- +pass:[yesno]+:

* +pass:[&lt;Alt-Shift-Y&gt;]+: +pass:[prompt-yank --sel]+
* +pass:[&lt;Alt-Y&gt;]+: +pass:[prompt-yank]+
* +pass:[&lt;Escape&gt;]+: +pass:[leave-mode]+
* +pass:[&lt;Return&gt;]+: +pass:[prompt-accept]+
* +pass:[N]+: +pass:[prompt-accept --save no]+
* +pass:[Y]+: +pass:[prompt-accept --save yes]+
* +pass:[n]+: +pass:[prompt-accept no]+
* +pass:[y]+: +pass:[prompt-accept yes]+

[[bindings.key_mappings]]
=== bindings.key_mappings
This setting can be used to map keys to other keys.
When the key used as dictionary-key is pressed, the binding for the key used as dictionary-value is invoked instead.
This is useful for global remappings of keys, for example to map Ctrl-[ to Escape.
Note that when a key is bound (via `bindings.default` or `bindings.commands`), the mapping is ignored.

Type: <<types,Dict>>

Default: 

- +pass:[&lt;Ctrl-6&gt;]+: +pass:[&lt;Ctrl-^&gt;]+
- +pass:[&lt;Ctrl-Enter&gt;]+: +pass:[&lt;Ctrl-Return&gt;]+
- +pass:[&lt;Ctrl-I&gt;]+: +pass:[&lt;Tab&gt;]+
- +pass:[&lt;Ctrl-J&gt;]+: +pass:[&lt;Return&gt;]+
- +pass:[&lt;Ctrl-M&gt;]+: +pass:[&lt;Return&gt;]+
- +pass:[&lt;Ctrl-[&gt;]+: +pass:[&lt;Escape&gt;]+
- +pass:[&lt;Enter&gt;]+: +pass:[&lt;Return&gt;]+
- +pass:[&lt;Shift-Enter&gt;]+: +pass:[&lt;Return&gt;]+
- +pass:[&lt;Shift-Return&gt;]+: +pass:[&lt;Return&gt;]+

[[colors.completion.category.bg]]
=== colors.completion.category.bg
Background color of the completion widget category headers.

Type: <<types,QssColor>>

Default: +pass:[qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #888888, stop:1 #505050)]+

[[colors.completion.category.border.bottom]]
=== colors.completion.category.border.bottom
Bottom border color of the completion widget category headers.

Type: <<types,QssColor>>

Default: +pass:[black]+

[[colors.completion.category.border.top]]
=== colors.completion.category.border.top
Top border color of the completion widget category headers.

Type: <<types,QssColor>>

Default: +pass:[black]+

[[colors.completion.category.fg]]
=== colors.completion.category.fg
Foreground color of completion widget category headers.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.completion.even.bg]]
=== colors.completion.even.bg
Background color of the completion widget for even rows.

Type: <<types,QssColor>>

Default: +pass:[#333333]+

[[colors.completion.fg]]
=== colors.completion.fg
Text color of the completion widget.
May be a single color to use for all columns or a list of three colors, one for each column.

Type: <<types,List of QtColor&#44; or QtColor>>

Default: 

- +pass:[white]+
- +pass:[white]+
- +pass:[white]+

[[colors.completion.item.selected.bg]]
=== colors.completion.item.selected.bg
Background color of the selected completion item.

Type: <<types,QssColor>>

Default: +pass:[#e8c000]+

[[colors.completion.item.selected.border.bottom]]
=== colors.completion.item.selected.border.bottom
Bottom border color of the selected completion item.

Type: <<types,QssColor>>

Default: +pass:[#bbbb00]+

[[colors.completion.item.selected.border.top]]
=== colors.completion.item.selected.border.top
Top border color of the selected completion item.

Type: <<types,QssColor>>

Default: +pass:[#bbbb00]+

[[colors.completion.item.selected.fg]]
=== colors.completion.item.selected.fg
Foreground color of the selected completion item.

Type: <<types,QtColor>>

Default: +pass:[black]+

[[colors.completion.item.selected.match.fg]]
=== colors.completion.item.selected.match.fg
Foreground color of the matched text in the selected completion item.

Type: <<types,QtColor>>

Default: +pass:[#ff4444]+

[[colors.completion.match.fg]]
=== colors.completion.match.fg
Foreground color of the matched text in the completion.

Type: <<types,QtColor>>

Default: +pass:[#ff4444]+

[[colors.completion.odd.bg]]
=== colors.completion.odd.bg
Background color of the completion widget for odd rows.

Type: <<types,QssColor>>

Default: +pass:[#444444]+

[[colors.completion.scrollbar.bg]]
=== colors.completion.scrollbar.bg
Color of the scrollbar in the completion view.

Type: <<types,QssColor>>

Default: +pass:[#333333]+

[[colors.completion.scrollbar.fg]]
=== colors.completion.scrollbar.fg
Color of the scrollbar handle in the completion view.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.contextmenu.disabled.bg]]
=== colors.contextmenu.disabled.bg
Background color of disabled items in the context menu.
If set to null, the Qt default is used.

Type: <<types,QssColor>>

Default: empty

[[colors.contextmenu.disabled.fg]]
=== colors.contextmenu.disabled.fg
Foreground color of disabled items in the context menu.
If set to null, the Qt default is used.

Type: <<types,QssColor>>

Default: empty

[[colors.contextmenu.menu.bg]]
=== colors.contextmenu.menu.bg
Background color of the context menu.
If set to null, the Qt default is used.

Type: <<types,QssColor>>

Default: empty

[[colors.contextmenu.menu.fg]]
=== colors.contextmenu.menu.fg
Foreground color of the context menu.
If set to null, the Qt default is used.

Type: <<types,QssColor>>

Default: empty

[[colors.contextmenu.selected.bg]]
=== colors.contextmenu.selected.bg
Background color of the context menu's selected item.
If set to null, the Qt default is used.

Type: <<types,QssColor>>

Default: empty

[[colors.contextmenu.selected.fg]]
=== colors.contextmenu.selected.fg
Foreground color of the context menu's selected item.
If set to null, the Qt default is used.

Type: <<types,QssColor>>

Default: empty

[[colors.downloads.bar.bg]]
=== colors.downloads.bar.bg
Background color for the download bar.

Type: <<types,QssColor>>

Default: +pass:[black]+

[[colors.downloads.error.bg]]
=== colors.downloads.error.bg
Background color for downloads with errors.

Type: <<types,QtColor>>

Default: +pass:[red]+

[[colors.downloads.error.fg]]
=== colors.downloads.error.fg
Foreground color for downloads with errors.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.downloads.start.bg]]
=== colors.downloads.start.bg
Color gradient start for download backgrounds.

Type: <<types,QtColor>>

Default: +pass:[#0000aa]+

[[colors.downloads.start.fg]]
=== colors.downloads.start.fg
Color gradient start for download text.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.downloads.stop.bg]]
=== colors.downloads.stop.bg
Color gradient stop for download backgrounds.

Type: <<types,QtColor>>

Default: +pass:[#00aa00]+

[[colors.downloads.stop.fg]]
=== colors.downloads.stop.fg
Color gradient end for download text.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.downloads.system.bg]]
=== colors.downloads.system.bg
Color gradient interpolation system for download backgrounds.

Type: <<types,ColorSystem>>

Valid values:

 * +rgb+: Interpolate in the RGB color system.
 * +hsv+: Interpolate in the HSV color system.
 * +hsl+: Interpolate in the HSL color system.
 * +none+: Don't show a gradient.

Default: +pass:[rgb]+

[[colors.downloads.system.fg]]
=== colors.downloads.system.fg
Color gradient interpolation system for download text.

Type: <<types,ColorSystem>>

Valid values:

 * +rgb+: Interpolate in the RGB color system.
 * +hsv+: Interpolate in the HSV color system.
 * +hsl+: Interpolate in the HSL color system.
 * +none+: Don't show a gradient.

Default: +pass:[rgb]+

[[colors.hints.bg]]
=== colors.hints.bg
Background color for hints.
Note that you can use a `rgba(...)` value for transparency.

Type: <<types,QssColor>>

Default: +pass:[qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 rgba(255, 247, 133, 0.8), stop:1 rgba(255, 197, 66, 0.8))]+

[[colors.hints.fg]]
=== colors.hints.fg
Font color for hints.

Type: <<types,QssColor>>

Default: +pass:[black]+

[[colors.hints.match.fg]]
=== colors.hints.match.fg
Font color for the matched part of hints.

Type: <<types,QtColor>>

Default: +pass:[green]+

[[colors.keyhint.bg]]
=== colors.keyhint.bg
Background color of the keyhint widget.

Type: <<types,QssColor>>

Default: +pass:[rgba(0, 0, 0, 80%)]+

[[colors.keyhint.fg]]
=== colors.keyhint.fg
Text color for the keyhint widget.

Type: <<types,QssColor>>

Default: +pass:[#FFFFFF]+

[[colors.keyhint.suffix.fg]]
=== colors.keyhint.suffix.fg
Highlight color for keys to complete the current keychain.

Type: <<types,QssColor>>

Default: +pass:[#FFFF00]+

[[colors.messages.error.bg]]
=== colors.messages.error.bg
Background color of an error message.

Type: <<types,QssColor>>

Default: +pass:[red]+

[[colors.messages.error.border]]
=== colors.messages.error.border
Border color of an error message.

Type: <<types,QssColor>>

Default: +pass:[#bb0000]+

[[colors.messages.error.fg]]
=== colors.messages.error.fg
Foreground color of an error message.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.messages.info.bg]]
=== colors.messages.info.bg
Background color of an info message.

Type: <<types,QssColor>>

Default: +pass:[black]+

[[colors.messages.info.border]]
=== colors.messages.info.border
Border color of an info message.

Type: <<types,QssColor>>

Default: +pass:[#333333]+

[[colors.messages.info.fg]]
=== colors.messages.info.fg
Foreground color of an info message.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.messages.warning.bg]]
=== colors.messages.warning.bg
Background color of a warning message.

Type: <<types,QssColor>>

Default: +pass:[darkorange]+

[[colors.messages.warning.border]]
=== colors.messages.warning.border
Border color of a warning message.

Type: <<types,QssColor>>

Default: +pass:[#d47300]+

[[colors.messages.warning.fg]]
=== colors.messages.warning.fg
Foreground color of a warning message.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.prompts.bg]]
=== colors.prompts.bg
Background color for prompts.

Type: <<types,QssColor>>

Default: +pass:[#444444]+

[[colors.prompts.border]]
=== colors.prompts.border
Border used around UI elements in prompts.

Type: <<types,String>>

Default: +pass:[1px solid gray]+

[[colors.prompts.fg]]
=== colors.prompts.fg
Foreground color for prompts.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.prompts.selected.bg]]
=== colors.prompts.selected.bg
Background color for the selected item in filename prompts.

Type: <<types,QssColor>>

Default: +pass:[grey]+

[[colors.statusbar.caret.bg]]
=== colors.statusbar.caret.bg
Background color of the statusbar in caret mode.

Type: <<types,QssColor>>

Default: +pass:[purple]+

[[colors.statusbar.caret.fg]]
=== colors.statusbar.caret.fg
Foreground color of the statusbar in caret mode.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.caret.selection.bg]]
=== colors.statusbar.caret.selection.bg
Background color of the statusbar in caret mode with a selection.

Type: <<types,QssColor>>

Default: +pass:[#a12dff]+

[[colors.statusbar.caret.selection.fg]]
=== colors.statusbar.caret.selection.fg
Foreground color of the statusbar in caret mode with a selection.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.command.bg]]
=== colors.statusbar.command.bg
Background color of the statusbar in command mode.

Type: <<types,QssColor>>

Default: +pass:[black]+

[[colors.statusbar.command.fg]]
=== colors.statusbar.command.fg
Foreground color of the statusbar in command mode.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.command.private.bg]]
=== colors.statusbar.command.private.bg
Background color of the statusbar in private browsing + command mode.

Type: <<types,QssColor>>

Default: +pass:[darkslategray]+

[[colors.statusbar.command.private.fg]]
=== colors.statusbar.command.private.fg
Foreground color of the statusbar in private browsing + command mode.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.insert.bg]]
=== colors.statusbar.insert.bg
Background color of the statusbar in insert mode.

Type: <<types,QssColor>>

Default: +pass:[darkgreen]+

[[colors.statusbar.insert.fg]]
=== colors.statusbar.insert.fg
Foreground color of the statusbar in insert mode.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.normal.bg]]
=== colors.statusbar.normal.bg
Background color of the statusbar.

Type: <<types,QssColor>>

Default: +pass:[black]+

[[colors.statusbar.normal.fg]]
=== colors.statusbar.normal.fg
Foreground color of the statusbar.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.passthrough.bg]]
=== colors.statusbar.passthrough.bg
Background color of the statusbar in passthrough mode.

Type: <<types,QssColor>>

Default: +pass:[darkblue]+

[[colors.statusbar.passthrough.fg]]
=== colors.statusbar.passthrough.fg
Foreground color of the statusbar in passthrough mode.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.private.bg]]
=== colors.statusbar.private.bg
Background color of the statusbar in private browsing mode.

Type: <<types,QssColor>>

Default: +pass:[#666666]+

[[colors.statusbar.private.fg]]
=== colors.statusbar.private.fg
Foreground color of the statusbar in private browsing mode.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.progress.bg]]
=== colors.statusbar.progress.bg
Background color of the progress bar.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.url.error.fg]]
=== colors.statusbar.url.error.fg
Foreground color of the URL in the statusbar on error.

Type: <<types,QssColor>>

Default: +pass:[orange]+

[[colors.statusbar.url.fg]]
=== colors.statusbar.url.fg
Default foreground color of the URL in the statusbar.

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.url.hover.fg]]
=== colors.statusbar.url.hover.fg
Foreground color of the URL in the statusbar for hovered links.

Type: <<types,QssColor>>

Default: +pass:[aqua]+

[[colors.statusbar.url.success.http.fg]]
=== colors.statusbar.url.success.http.fg
Foreground color of the URL in the statusbar on successful load (http).

Type: <<types,QssColor>>

Default: +pass:[white]+

[[colors.statusbar.url.success.https.fg]]
=== colors.statusbar.url.success.https.fg
Foreground color of the URL in the statusbar on successful load (https).

Type: <<types,QssColor>>

Default: +pass:[lime]+

[[colors.statusbar.url.warn.fg]]
=== colors.statusbar.url.warn.fg
Foreground color of the URL in the statusbar when there's a warning.

Type: <<types,QssColor>>

Default: +pass:[yellow]+

[[colors.tabs.bar.bg]]
=== colors.tabs.bar.bg
Background color of the tab bar.

Type: <<types,QssColor>>

Default: +pass:[#555555]+

[[colors.tabs.even.bg]]
=== colors.tabs.even.bg
Background color of unselected even tabs.

Type: <<types,QtColor>>

Default: +pass:[darkgrey]+

[[colors.tabs.even.fg]]
=== colors.tabs.even.fg
Foreground color of unselected even tabs.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.tabs.indicator.error]]
=== colors.tabs.indicator.error
Color for the tab indicator on errors.

Type: <<types,QtColor>>

Default: +pass:[#ff0000]+

[[colors.tabs.indicator.start]]
=== colors.tabs.indicator.start
Color gradient start for the tab indicator.

Type: <<types,QtColor>>

Default: +pass:[#0000aa]+

[[colors.tabs.indicator.stop]]
=== colors.tabs.indicator.stop
Color gradient end for the tab indicator.

Type: <<types,QtColor>>

Default: +pass:[#00aa00]+

[[colors.tabs.indicator.system]]
=== colors.tabs.indicator.system
Color gradient interpolation system for the tab indicator.

Type: <<types,ColorSystem>>

Valid values:

 * +rgb+: Interpolate in the RGB color system.
 * +hsv+: Interpolate in the HSV color system.
 * +hsl+: Interpolate in the HSL color system.
 * +none+: Don't show a gradient.

Default: +pass:[rgb]+

[[colors.tabs.odd.bg]]
=== colors.tabs.odd.bg
Background color of unselected odd tabs.

Type: <<types,QtColor>>

Default: +pass:[grey]+

[[colors.tabs.odd.fg]]
=== colors.tabs.odd.fg
Foreground color of unselected odd tabs.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.tabs.pinned.even.bg]]
=== colors.tabs.pinned.even.bg
Background color of pinned unselected even tabs.

Type: <<types,QtColor>>

Default: +pass:[darkseagreen]+

[[colors.tabs.pinned.even.fg]]
=== colors.tabs.pinned.even.fg
Foreground color of pinned unselected even tabs.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.tabs.pinned.odd.bg]]
=== colors.tabs.pinned.odd.bg
Background color of pinned unselected odd tabs.

Type: <<types,QtColor>>

Default: +pass:[seagreen]+

[[colors.tabs.pinned.odd.fg]]
=== colors.tabs.pinned.odd.fg
Foreground color of pinned unselected odd tabs.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.tabs.pinned.selected.even.bg]]
=== colors.tabs.pinned.selected.even.bg
Background color of pinned selected even tabs.

Type: <<types,QtColor>>

Default: +pass:[black]+

[[colors.tabs.pinned.selected.even.fg]]
=== colors.tabs.pinned.selected.even.fg
Foreground color of pinned selected even tabs.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.tabs.pinned.selected.odd.bg]]
=== colors.tabs.pinned.selected.odd.bg
Background color of pinned selected odd tabs.

Type: <<types,QtColor>>

Default: +pass:[black]+

[[colors.tabs.pinned.selected.odd.fg]]
=== colors.tabs.pinned.selected.odd.fg
Foreground color of pinned selected odd tabs.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.tabs.selected.even.bg]]
=== colors.tabs.selected.even.bg
Background color of selected even tabs.

Type: <<types,QtColor>>

Default: +pass:[black]+

[[colors.tabs.selected.even.fg]]
=== colors.tabs.selected.even.fg
Foreground color of selected even tabs.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.tabs.selected.odd.bg]]
=== colors.tabs.selected.odd.bg
Background color of selected odd tabs.

Type: <<types,QtColor>>

Default: +pass:[black]+

[[colors.tabs.selected.odd.fg]]
=== colors.tabs.selected.odd.fg
Foreground color of selected odd tabs.

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.webpage.bg]]
=== colors.webpage.bg
Background color for webpages if unset (or empty to use the theme's color).

Type: <<types,QtColor>>

Default: +pass:[white]+

[[colors.webpage.darkmode.algorithm]]
=== colors.webpage.darkmode.algorithm
Which algorithm to use for modifying how colors are rendered with darkmode.
The `lightness-cielab` value was added with QtWebEngine 5.14 and is treated like `lightness-hsl` with older QtWebEngine versions.

This setting requires a restart.

Type: <<types,String>>

Valid values:

 * +lightness-cielab+: Modify colors by converting them to CIELAB color space and inverting the L value. Not available with Qt < 5.14.
 * +lightness-hsl+: Modify colors by converting them to the HSL color space and inverting the lightness (i.e. the "L" in HSL).
 * +brightness-rgb+: Modify colors by subtracting each of r, g, and b from their maximum value.

Default: +pass:[lightness-cielab]+

On QtWebEngine, this setting requires Qt 5.10 or newer.

On QtWebKit, this setting is unavailable.

[[colors.webpage.darkmode.contrast]]
=== colors.webpage.darkmode.contrast
Contrast for dark mode.
This only has an effect when `colors.webpage.darkmode.algorithm` is set to `lightness-hsl` or `brightness-rgb`.

This setting requires a restart.

Type: <<types,Float>>

Default: +pass:[0.0]+

On QtWebEngine, this setting requires Qt 5.10 or newer.

On QtWebKit, this setting is unavailable.

[[colors.webpage.darkmode.enabled]]
=== colors.webpage.darkmode.enabled
Render all web contents using a dark theme.
Example configurations from Chromium's `chrome://flags`:

- "With simple HSL/CIELAB/RGB-based inversion": Set
  `colors.webpage.darkmode.algorithm` accordingly.

- "With selective image inversion": Set
  `colors.webpage.darkmode.policy.images` to `smart`.

- "With selective inversion of non-image elements": Set
  `colors.webpage.darkmode.threshold.text` to 150 and
  `colors.webpage.darkmode.threshold.background` to 205.

- "With selective inversion of everything": Combines the two variants
  above.

This setting requires a restart.

Type: <<types,Bool>>

Default: +pass:[false]+

On QtWebEngine, this setting requires Qt 5.10 or newer.

On QtWebKit, this setting is unavailable.

[[colors.webpage.darkmode.grayscale.all]]
=== colors.webpage.darkmode.grayscale.all
Render all colors as grayscale.
This only has an effect when `colors.webpage.darkmode.algorithm` is set to `lightness-hsl` or `brightness-rgb`.

This setting requires a restart.

Type: <<types,Bool>>

Default: +pass:[false]+

On QtWebEngine, this setting requires Qt 5.10 or newer.

On QtWebKit, this setting is unavailable.

[[colors.webpage.darkmode.grayscale.images]]
=== colors.webpage.darkmode.grayscale.images
Desaturation factor for images in dark mode.
If set to 0, images are left as-is. If set to 1, images are completely grayscale. Values between 0 and 1 desaturate the colors accordingly.

This setting requires a restart.

Type: <<types,Float>>

Default: +pass:[0.0]+

On QtWebEngine, this setting requires Qt 5.14 or newer.

On QtWebKit, this setting is unavailable.

[[colors.webpage.darkmode.policy.images]]
=== colors.webpage.darkmode.policy.images
Which images to apply dark mode to.
With QtWebEngine 5.15.0, this setting can cause frequent renderer process crashes due to a https://codereview.qt-project.org/c/qt/qtwebengine-chromium/+/304211[bug in Qt]. With QtWebEngine 5.10, this is not available at all. In those cases, the 'smart' setting is ignored and treated like 'never'.

This setting requires a restart.

Type: <<types,String>>

Valid values:

 * +always+: Apply dark mode filter to all images.
 * +never+: Never apply dark mode filter to any images.
 * +smart+: Apply dark mode based on image content. Not available with Qt 5.10 / 5.15.0.

Default: +pass:[smart]+

On QtWebEngine, this setting requires Qt 5.10 or newer.

On QtWebKit, this setting is unavailable.

[[colors.webpage.darkmode.policy.page]]
=== colors.webpage.darkmode.policy.page
Which pages to apply dark mode to.

This setting requires a restart.

Type: <<types,String>>

Valid values:

 * +always+: Apply dark mode filter to all frames, regardless of content.
 * +smart+: Apply dark mode filter to frames based on background color.

Default: +pass:[smart]+

On QtWebEngine, this setting requires Qt 5.14 or newer.

On QtWebKit, this setting is unavailable.

[[colors.webpage.darkmode.threshold.background]]
=== colors.webpage.darkmode.threshold.background
Threshold for inverting background elements with dark mode.
Background elements with brightness above this threshold will be inverted, and below it will be left as in the original, non-dark-mode page. Set to 256 to never invert the color or to 0 to always invert it.
Note: This behavior is the opposite of `colors.webpage.darkmode.threshold.text`!

This setting requires a restart.

Type: <<types,Int>>

Default: +pass:[0]+

On QtWebEngine, this setting requires Qt 5.14 or newer.

On QtWebKit, this setting is unavailable.

[[colors.webpage.darkmode.threshold.text]]
=== colors.webpage.darkmode.threshold.text
Threshold for inverting text with dark mode.
Text colors with brightness below this threshold will be inverted, and above it will be left as in the original, non-dark-mode page. Set to 256 to always invert text color or to 0 to never invert text color.

This setting requires a restart.

Type: <<types,Int>>

Default: +pass:[256]+

On QtWebEngine, this setting requires Qt 5.14 or newer.

On QtWebKit, this setting is unavailable.

[[colors.webpage.prefers_color_scheme_dark]]
=== colors.webpage.prefers_color_scheme_dark
Force `prefers-color-scheme: dark` colors for websites.

This setting requires a restart.

Type: <<types,Bool>>

Default: +pass:[false]+

On QtWebEngine, this setting requires Qt 5.14 or newer.

On QtWebKit, this setting is unavailable.

[[completion.cmd_history_max_items]]
=== completion.cmd_history_max_items
Number of commands to save in the command history.
0: no history / -1: unlimited

Type: <<types,Int>>

Default: +pass:[100]+

[[completion.delay]]
=== completion.delay
Delay (in milliseconds) before updating completions after typing a character.

Type: <<types,Int>>

Default: +pass:[0]+

[[completion.height]]
=== completion.height
Height (in pixels or as percentage of the window) of the completion.

Type: <<types,PercOrInt>>

Default: +pass:[50%]+

[[completion.min_chars]]
=== completion.min_chars
Minimum amount of characters needed to update completions.

Type: <<types,Int>>

Default: +pass:[1]+

[[completion.open_categories]]
=== completion.open_categories
Which categories to show (in which order) in the :open completion.

Type: <<types,FlagList>>

Valid values:

 * +searchengines+
 * +quickmarks+
 * +bookmarks+
 * +history+

Default: 

- +pass:[searchengines]+
- +pass:[quickmarks]+
- +pass:[bookmarks]+
- +pass:[history]+

[[completion.quick]]
=== completion.quick
Move on to the next part when there's only one possible completion left.

Type: <<types,Bool>>

Default: +pass:[true]+

[[completion.scrollbar.padding]]
=== completion.scrollbar.padding
Padding (in pixels) of the scrollbar handle in the completion window.

Type: <<types,Int>>

Default: +pass:[2]+

[[completion.scrollbar.width]]
=== completion.scrollbar.width
Width (in pixels) of the scrollbar in the completion window.

Type: <<types,Int>>

Default: +pass:[12]+

[[completion.show]]
=== completion.show
When to show the autocompletion window.

Type: <<types,String>>

Valid values:

 * +always+: Whenever a completion is available.
 * +auto+: Whenever a completion is requested.
 * +never+: Never.

Default: +pass:[always]+

[[completion.shrink]]
=== completion.shrink
Shrink the completion to be smaller than the configured size if there are no scrollbars.

Type: <<types,Bool>>

Default: +pass:[false]+

[[completion.timestamp_format]]
=== completion.timestamp_format
Format of timestamps (e.g. for the history completion).
See https://sqlite.org/lang_datefunc.html and https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior for allowed substitutions, qutebrowser uses both sqlite and Python to format its timestamps.

Type: <<types,String>>

Default: +pass:[%Y-%m-%d %H:%M]+

[[completion.use_best_match]]
=== completion.use_best_match
Execute the best-matching command on a partial match.

Type: <<types,Bool>>

Default: +pass:[false]+

[[completion.web_history.exclude]]
=== completion.web_history.exclude
A list of patterns which should not be shown in the history.
This only affects the completion. Matching URLs are still saved in the history (and visible on the qute://history page), but hidden in the completion.
Changing this setting will cause the completion history to be regenerated on the next start, which will take a short while.

This setting requires a restart.

Type: <<types,List of UrlPattern>>

Default: empty

[[completion.web_history.max_items]]
=== completion.web_history.max_items
Number of URLs to show in the web history.
0: no history / -1: unlimited

Type: <<types,Int>>

Default: +pass:[-1]+

[[confirm_quit]]
=== confirm_quit
Require a confirmation before quitting the application.

Type: <<types,ConfirmQuit>>

Valid values:

 * +always+: Always show a confirmation.
 * +multiple-tabs+: Show a confirmation if multiple tabs are opened.
 * +downloads+: Show a confirmation if downloads are running
 * +never+: Never show a confirmation.

Default: 

- +pass:[never]+

[[content.autoplay]]
=== content.autoplay
Automatically start playing `<video>` elements.
Note: On Qt < 5.11, this option needs a restart and does not support URL patterns.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

On QtWebEngine, this setting requires Qt 5.10 or newer.

On QtWebKit, this setting is unavailable.

[[content.cache.appcache]]
=== content.cache.appcache
Enable support for the HTML 5 web application cache feature.
An application cache acts like an HTTP cache in some sense. For documents that use the application cache via JavaScript, the loader engine will first ask the application cache for the contents, before hitting the network.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

This setting is only available with the QtWebKit backend.

[[content.cache.maximum_pages]]
=== content.cache.maximum_pages
Maximum number of pages to hold in the global memory page cache.
The page cache allows for a nicer user experience when navigating forth or back to pages in the forward/back history, by pausing and resuming up to _n_ pages.
For more information about the feature, please refer to: http://webkit.org/blog/427/webkit-page-cache-i-the-basics/

Type: <<types,Int>>

Default: +pass:[0]+

This setting is only available with the QtWebKit backend.

[[content.cache.size]]
=== content.cache.size
Size (in bytes) of the HTTP network cache. Null to use the default value.
With QtWebEngine, the maximum supported value is 2147483647 (~2 GB).

Type: <<types,Int>>

Default: empty

[[content.canvas_reading]]
=== content.canvas_reading
Allow websites to read canvas elements.
Note this is needed for some websites to work properly.

This setting requires a restart.

Type: <<types,Bool>>

Default: +pass:[true]+

This setting is only available with the QtWebEngine backend.

[[content.cookies.accept]]
=== content.cookies.accept
Which cookies to accept.
With QtWebEngine, this setting also controls other features with tracking capabilities similar to those of cookies; including IndexedDB, DOM storage, filesystem API, service workers, and AppCache.
Note that with QtWebKit, only `all` and `never` are supported as per-domain values. Setting `no-3rdparty` or `no-unknown-3rdparty` per-domain on QtWebKit will have the same effect as `all`.
If this setting is used with URL patterns, the pattern gets applied to the origin/first party URL of the page making the request, not the request URL.

This setting supports URL patterns.

Type: <<types,String>>

Valid values:

 * +all+: Accept all cookies.
 * +no-3rdparty+: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
 * +no-unknown-3rdparty+: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
 * +never+: Don't accept cookies at all.

Default: +pass:[all]+

On QtWebEngine, this setting requires Qt 5.11 or newer.

[[content.cookies.store]]
=== content.cookies.store
Store cookies.
Note this option needs a restart with QtWebEngine on Qt < 5.9.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.default_encoding]]
=== content.default_encoding
Default encoding to use for websites.
The encoding must be a string describing an encoding such as _utf-8_, _iso-8859-1_, etc.

Type: <<types,String>>

Default: +pass:[iso-8859-1]+

[[content.desktop_capture]]
=== content.desktop_capture
Allow websites to share screen content.
On Qt < 5.10, a dialog box is always displayed, even if this is set to "true".

This setting supports URL patterns.

Type: <<types,BoolAsk>>

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

[[content.dns_prefetch]]
=== content.dns_prefetch
Try to pre-fetch DNS entries to speed up browsing.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

On QtWebEngine, this setting requires Qt 5.12 or newer.

[[content.frame_flattening]]
=== content.frame_flattening
Expand each subframe to its contents.
This will flatten all the frames to become one scrollable page.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

This setting is only available with the QtWebKit backend.

[[content.fullscreen.overlay_timeout]]
=== content.fullscreen.overlay_timeout
Set fullscreen notification overlay timeout in milliseconds.
If set to 0, no overlay will be displayed.

Type: <<types,Int>>

Default: +pass:[3000]+

[[content.fullscreen.window]]
=== content.fullscreen.window
Limit fullscreen to the browser window (does not expand to fill the screen).

Type: <<types,Bool>>

Default: +pass:[false]+

[[content.geolocation]]
=== content.geolocation
Allow websites to request geolocations.

This setting supports URL patterns.

Type: <<types,BoolAsk>>

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

[[content.headers.accept_language]]
=== content.headers.accept_language
Value to send in the `Accept-Language` header.
Note that the value read from JavaScript is always the global value.

This setting supports URL patterns.

Type: <<types,String>>

Default: +pass:[en-US,en;q=0.9]+

[[content.headers.custom]]
=== content.headers.custom
Custom headers for qutebrowser HTTP requests.

This setting supports URL patterns.

Type: <<types,Dict>>

Default: empty

[[content.headers.do_not_track]]
=== content.headers.do_not_track
Value to send in the `DNT` header.
When this is set to true, qutebrowser asks websites to not track your identity. If set to null, the DNT header is not sent at all.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.headers.referer]]
=== content.headers.referer
When to send the Referer header.
The Referer header tells websites from which website you were coming from when visiting them.
No restart is needed with QtWebKit.

This setting requires a restart.

Type: <<types,String>>

Valid values:

 * +always+: Always send the Referer.
 * +never+: Never send the Referer. This is not recommended, as some sites may break.
 * +same-domain+: Only send the Referer for the same domain. This will still protect your privacy, but shouldn't break any sites. With QtWebEngine, the referer will still be sent for other domains, but with stripped path information.

Default: +pass:[same-domain]+

[[content.headers.user_agent]]
=== content.headers.user_agent
User agent to send.

The following placeholders are defined:

* `{os_info}`: Something like "X11; Linux x86_64".
* `{webkit_version}`: The underlying WebKit version (set to a fixed value
  with QtWebEngine).
* `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for QtWebEngine.
* `{qt_version}`: The underlying Qt version.
* `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
  QtWebEngine.
* `{upstream_browser_version}`: The corresponding Safari/Chrome version.
* `{qutebrowser_version}`: The currently running qutebrowser version.

The default value is equal to the unchanged user agent of
QtWebKit/QtWebEngine.

Note that the value read from JavaScript is always the global value. With
QtWebEngine between 5.12 and 5.14 (inclusive), changing the value exposed
to JavaScript requires a restart.


This setting supports URL patterns.

Type: <<types,FormatString>>

Default: +pass:[Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {qt_key}/{qt_version} {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}]+

[[content.host_blocking.enabled]]
=== content.host_blocking.enabled
Enable host blocking.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.host_blocking.lists]]
=== content.host_blocking.lists
List of URLs of lists which contain hosts to block.

The file can be in one of the following formats:

- An `/etc/hosts`-like file
- One host per line
- A zip-file of any of the above, with either only one file, or a file
  named `hosts` (with any extension).

It's also possible to add a local file or directory via a `file://` URL. In
case of a directory, all files in the directory are read as adblock lists.

The file `~/.config/qutebrowser/blocked-hosts` is always read if it exists.


Type: <<types,List of Url>>

Default: 

- +pass:[https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts]+

[[content.host_blocking.whitelist]]
=== content.host_blocking.whitelist
A list of patterns that should always be loaded, despite being ad-blocked.
Note this whitelists blocked hosts, not first-party URLs. As an example, if `example.org` loads an ad from `ads.example.org`, the whitelisted host should be `ads.example.org`. If you want to disable the adblocker on a given page, use the `content.host_blocking.enabled` setting with a URL pattern instead.
Local domains are always exempt from hostblocking.

Type: <<types,List of UrlPattern>>

Default: empty

[[content.hyperlink_auditing]]
=== content.hyperlink_auditing
Enable hyperlink auditing (`<a ping>`).

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

[[content.images]]
=== content.images
Load images automatically in web pages.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.javascript.alert]]
=== content.javascript.alert
Show javascript alerts.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.javascript.can_access_clipboard]]
=== content.javascript.can_access_clipboard
Allow JavaScript to read from or write to the clipboard.
With QtWebEngine, writing the clipboard as response to a user interaction is always allowed.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

[[content.javascript.can_close_tabs]]
=== content.javascript.can_close_tabs
Allow JavaScript to close tabs.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

This setting is only available with the QtWebKit backend.

[[content.javascript.can_open_tabs_automatically]]
=== content.javascript.can_open_tabs_automatically
Allow JavaScript to open new tabs without user interaction.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

[[content.javascript.enabled]]
=== content.javascript.enabled
Enable JavaScript.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.javascript.log]]
=== content.javascript.log
Log levels to use for JavaScript console logging messages.
When a JavaScript message with the level given in the dictionary key is logged, the corresponding dictionary value selects the qutebrowser logger to use.
On QtWebKit, the "unknown" setting is always used.
The following levels are valid: `none`, `debug`, `info`, `warning`, `error`.

Type: <<types,Dict>>

Default: 

- +pass:[error]+: +pass:[debug]+
- +pass:[info]+: +pass:[debug]+
- +pass:[unknown]+: +pass:[debug]+
- +pass:[warning]+: +pass:[debug]+

[[content.javascript.modal_dialog]]
=== content.javascript.modal_dialog
Use the standard JavaScript modal dialog for `alert()` and `confirm()`.

Type: <<types,Bool>>

Default: +pass:[false]+

[[content.javascript.prompt]]
=== content.javascript.prompt
Show javascript prompts.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.local_content_can_access_file_urls]]
=== content.local_content_can_access_file_urls
Allow locally loaded documents to access other local URLs.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.local_content_can_access_remote_urls]]
=== content.local_content_can_access_remote_urls
Allow locally loaded documents to access remote URLs.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

[[content.local_storage]]
=== content.local_storage
Enable support for HTML 5 local storage and Web SQL.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.media.audio_capture]]
=== content.media.audio_capture
Allow websites to record audio.

This setting supports URL patterns.

Type: <<types,BoolAsk>>

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

This setting is only available with the QtWebEngine backend.

[[content.media.audio_video_capture]]
=== content.media.audio_video_capture
Allow websites to record audio and video.

This setting supports URL patterns.

Type: <<types,BoolAsk>>

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

This setting is only available with the QtWebEngine backend.

[[content.media.video_capture]]
=== content.media.video_capture
Allow websites to record video.

This setting supports URL patterns.

Type: <<types,BoolAsk>>

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

This setting is only available with the QtWebEngine backend.

[[content.mouse_lock]]
=== content.mouse_lock
Allow websites to lock your mouse pointer.

This setting supports URL patterns.

Type: <<types,BoolAsk>>

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

On QtWebEngine, this setting requires Qt 5.8 or newer.

On QtWebKit, this setting is unavailable.

[[content.mute]]
=== content.mute
Automatically mute tabs.
Note that if the `:tab-mute` command is used, the mute status for the affected tab is now controlled manually, and this setting doesn't have any effect.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

[[content.netrc_file]]
=== content.netrc_file
Netrc-file for HTTP authentication.
If unset, `~/.netrc` is used.

Type: <<types,File>>

Default: empty

[[content.notifications]]
=== content.notifications
Allow websites to show notifications.

This setting supports URL patterns.

Type: <<types,BoolAsk>>

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

On QtWebEngine, this setting requires Qt 5.13 or newer.

[[content.pdfjs]]
=== content.pdfjs
Allow pdf.js to view PDF files in the browser.
Note that the files can still be downloaded by clicking the download button in the pdf.js viewer.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

[[content.persistent_storage]]
=== content.persistent_storage
Allow websites to request persistent storage quota via `navigator.webkitPersistentStorage.requestQuota`.

This setting supports URL patterns.

Type: <<types,BoolAsk>>

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

On QtWebEngine, this setting requires Qt 5.11 or newer.

On QtWebKit, this setting is unavailable.

[[content.plugins]]
=== content.plugins
Enable plugins in Web pages.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

[[content.print_element_backgrounds]]
=== content.print_element_backgrounds
Draw the background color and images also when the page is printed.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

On QtWebEngine, this setting requires Qt 5.8 or newer.

[[content.private_browsing]]
=== content.private_browsing
Open new windows in private browsing mode which does not record visited pages.

Type: <<types,Bool>>

Default: +pass:[false]+

[[content.proxy]]
=== content.proxy
Proxy to use.
In addition to the listed values, you can use a `socks://...` or `http://...` URL.
Note that with QtWebEngine, it will take a couple of seconds until the change is applied, if this value is changed at runtime.

Type: <<types,Proxy>>

Valid values:

 * +system+: Use the system wide proxy.
 * +none+: Don't use any proxy

Default: +pass:[system]+

[[content.proxy_dns_requests]]
=== content.proxy_dns_requests
Send DNS requests over the configured proxy.

Type: <<types,Bool>>

Default: +pass:[true]+

This setting is only available with the QtWebKit backend.

[[content.register_protocol_handler]]
=== content.register_protocol_handler
Allow websites to register protocol handlers via `navigator.registerProtocolHandler`.

This setting supports URL patterns.

Type: <<types,BoolAsk>>

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

On QtWebEngine, this setting requires Qt 5.11 or newer.

On QtWebKit, this setting is unavailable.

[[content.site_specific_quirks]]
=== content.site_specific_quirks
Enable quirks (such as faked user agent headers) needed to get specific sites to work properly.

This setting requires a restart.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.ssl_strict]]
=== content.ssl_strict
Validate SSL handshakes.

This setting supports URL patterns.

Type: <<types,BoolAsk>>

Valid values:

 * +true+
 * +false+
 * +ask+

Default: +pass:[ask]+

[[content.unknown_url_scheme_policy]]
=== content.unknown_url_scheme_policy
How navigation requests to URLs with unknown schemes are handled.

This setting supports URL patterns.

Type: <<types,String>>

Valid values:

 * +disallow+: Disallows all navigation requests to URLs with unknown schemes.
 * +allow-from-user-interaction+: Allows navigation requests to URLs with unknown schemes that are issued from user-interaction (like a mouse-click), whereas other navigation requests (for example from JavaScript) are suppressed.
 * +allow-all+: Allows all navigation requests to URLs with unknown schemes.

Default: +pass:[allow-from-user-interaction]+

On QtWebEngine, this setting requires Qt 5.11 or newer.

On QtWebKit, this setting is unavailable.

[[content.user_stylesheets]]
=== content.user_stylesheets
List of user stylesheet filenames to use.

Type: <<types,List of File&#44; or File>>

Default: empty

[[content.webgl]]
=== content.webgl
Enable WebGL.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

[[content.webrtc_ip_handling_policy]]
=== content.webrtc_ip_handling_policy
Which interfaces to expose via WebRTC.
On Qt 5.10, this option doesn't work because of a Qt bug.

This setting requires a restart.

Type: <<types,String>>

Valid values:

 * +all-interfaces+: WebRTC has the right to enumerate all interfaces and bind them to discover public interfaces.
 * +default-public-and-private-interfaces+: WebRTC should only use the default route used by http. This also exposes the associated default private address. Default route is the route chosen by the OS on a multi-homed endpoint.
 * +default-public-interface-only+: WebRTC should only use the default route used by http. This doesn't expose any local addresses.
 * +disable-non-proxied-udp+: WebRTC should only use TCP to contact peers or servers unless the proxy server supports UDP. This doesn't expose any local addresses either.

Default: +pass:[all-interfaces]+

On QtWebEngine, this setting requires Qt 5.9.2 or newer.

On QtWebKit, this setting is unavailable.

[[content.xss_auditing]]
=== content.xss_auditing
Monitor load requests for cross-site scripting attempts.
Suspicious scripts will be blocked and reported in the devtools JavaScript console.
Note that bypasses for the XSS auditor are widely known and it can be abused for cross-site info leaks in some scenarios, see: https://www.chromium.org/developers/design-documents/xss-auditor

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

[[downloads.location.directory]]
=== downloads.location.directory
Directory to save downloads to.
If unset, a sensible OS-specific default is used.

Type: <<types,Directory>>

Default: empty

[[downloads.location.prompt]]
=== downloads.location.prompt
Prompt the user for the download location.
If set to false, `downloads.location.directory` will be used.

Type: <<types,Bool>>

Default: +pass:[true]+

[[downloads.location.remember]]
=== downloads.location.remember
Remember the last used download directory.

Type: <<types,Bool>>

Default: +pass:[true]+

[[downloads.location.suggestion]]
=== downloads.location.suggestion
What to display in the download filename input.

Type: <<types,String>>

Valid values:

 * +path+: Show only the download path.
 * +filename+: Show only download filename.
 * +both+: Show download path and filename.

Default: +pass:[path]+

[[downloads.open_dispatcher]]
=== downloads.open_dispatcher
Default program used to open downloads.
If null, the default internal handler is used.
Any `{}` in the string will be expanded to the filename, else the filename will be appended.

Type: <<types,String>>

Default: empty

[[downloads.position]]
=== downloads.position
Where to show the downloaded files.

Type: <<types,VerticalPosition>>

Valid values:

 * +top+
 * +bottom+

Default: +pass:[top]+

[[downloads.remove_finished]]
=== downloads.remove_finished
Duration (in milliseconds) to wait before removing finished downloads.
If set to -1, downloads are never removed.

Type: <<types,Int>>

Default: +pass:[-1]+

[[editor.command]]
=== editor.command
Editor (and arguments) to use for the `open-editor` command.
The following placeholders are defined:

* `{file}`: Filename of the file to be edited.
* `{line}`: Line in which the caret is found in the text.
* `{column}`: Column in which the caret is found in the text.
* `{line0}`: Same as `{line}`, but starting from index 0.
* `{column0}`: Same as `{column}`, but starting from index 0.


Type: <<types,ShellCommand>>

Default: 

- +pass:[gvim]+
- +pass:[-f]+
- +pass:[{file}]+
- +pass:[-c]+
- +pass:[normal {line}G{column0}l]+

[[editor.encoding]]
=== editor.encoding
Encoding to use for the editor.

Type: <<types,Encoding>>

Default: +pass:[utf-8]+

[[fonts.completion.category]]
=== fonts.completion.category
Font used in the completion categories.

Type: <<types,Font>>

Default: +pass:[bold default_size default_family]+

[[fonts.completion.entry]]
=== fonts.completion.entry
Font used in the completion widget.

Type: <<types,Font>>

Default: +pass:[default_size default_family]+

[[fonts.contextmenu]]
=== fonts.contextmenu
Font used for the context menu.
If set to null, the Qt default is used.

Type: <<types,Font>>

Default: empty

[[fonts.debug_console]]
=== fonts.debug_console
Font used for the debugging console.

Type: <<types,Font>>

Default: +pass:[default_size default_family]+

[[fonts.default_family]]
=== fonts.default_family
Default font families to use.
Whenever "default_family" is used in a font setting, it's replaced with the fonts listed here.
If set to an empty value, a system-specific monospace default is used.

Type: <<types,List of Font&#44; or Font>>

Default: empty

[[fonts.default_size]]
=== fonts.default_size
Default font size to use.
Whenever "default_size" is used in a font setting, it's replaced with the size listed here.
Valid values are either a float value with a "pt" suffix, or an integer value with a "px" suffix.

Type: <<types,String>>

Default: +pass:[10pt]+

[[fonts.downloads]]
=== fonts.downloads
Font used for the downloadbar.

Type: <<types,Font>>

Default: +pass:[default_size default_family]+

[[fonts.hints]]
=== fonts.hints
Font used for the hints.

Type: <<types,Font>>

Default: +pass:[bold default_size default_family]+

[[fonts.keyhint]]
=== fonts.keyhint
Font used in the keyhint widget.

Type: <<types,Font>>

Default: +pass:[default_size default_family]+

[[fonts.messages.error]]
=== fonts.messages.error
Font used for error messages.

Type: <<types,Font>>

Default: +pass:[default_size default_family]+

[[fonts.messages.info]]
=== fonts.messages.info
Font used for info messages.

Type: <<types,Font>>

Default: +pass:[default_size default_family]+

[[fonts.messages.warning]]
=== fonts.messages.warning
Font used for warning messages.

Type: <<types,Font>>

Default: +pass:[default_size default_family]+

[[fonts.prompts]]
=== fonts.prompts
Font used for prompts.

Type: <<types,Font>>

Default: +pass:[default_size sans-serif]+

[[fonts.statusbar]]
=== fonts.statusbar
Font used in the statusbar.

Type: <<types,Font>>

Default: +pass:[default_size default_family]+

[[fonts.tabs.selected]]
=== fonts.tabs.selected
Font used for selected tabs.

Type: <<types,Font>>

Default: +pass:[default_size default_family]+

[[fonts.tabs.unselected]]
=== fonts.tabs.unselected
Font used for unselected tabs.

Type: <<types,Font>>

Default: +pass:[default_size default_family]+

[[fonts.web.family.cursive]]
=== fonts.web.family.cursive
Font family for cursive fonts.

Type: <<types,FontFamily>>

Default: empty

[[fonts.web.family.fantasy]]
=== fonts.web.family.fantasy
Font family for fantasy fonts.

Type: <<types,FontFamily>>

Default: empty

[[fonts.web.family.fixed]]
=== fonts.web.family.fixed
Font family for fixed fonts.

Type: <<types,FontFamily>>

Default: empty

[[fonts.web.family.sans_serif]]
=== fonts.web.family.sans_serif
Font family for sans-serif fonts.

Type: <<types,FontFamily>>

Default: empty

[[fonts.web.family.serif]]
=== fonts.web.family.serif
Font family for serif fonts.

Type: <<types,FontFamily>>

Default: empty

[[fonts.web.family.standard]]
=== fonts.web.family.standard
Font family for standard fonts.

Type: <<types,FontFamily>>

Default: empty

[[fonts.web.size.default]]
=== fonts.web.size.default
Default font size (in pixels) for regular text.

Type: <<types,Int>>

Default: +pass:[16]+

[[fonts.web.size.default_fixed]]
=== fonts.web.size.default_fixed
Default font size (in pixels) for fixed-pitch text.

Type: <<types,Int>>

Default: +pass:[13]+

[[fonts.web.size.minimum]]
=== fonts.web.size.minimum
Hard minimum font size (in pixels).

Type: <<types,Int>>

Default: +pass:[0]+

[[fonts.web.size.minimum_logical]]
=== fonts.web.size.minimum_logical
Minimum logical font size (in pixels) that is applied when zooming out.

Type: <<types,Int>>

Default: +pass:[6]+

[[hints.auto_follow]]
=== hints.auto_follow
When a hint can be automatically followed without pressing Enter.

Type: <<types,String>>

Valid values:

 * +always+: Auto-follow whenever there is only a single hint on a page.
 * +unique-match+: Auto-follow whenever there is a unique non-empty match in either the hint string (word mode) or filter (number mode).
 * +full-match+: Follow the hint when the user typed the whole hint (letter, word or number mode) or the element's text (only in number mode).
 * +never+: The user will always need to press Enter to follow a hint.

Default: +pass:[unique-match]+

[[hints.auto_follow_timeout]]
=== hints.auto_follow_timeout
Duration (in milliseconds) to ignore normal-mode key bindings after a successful auto-follow.

Type: <<types,Int>>

Default: +pass:[0]+

[[hints.border]]
=== hints.border
CSS border value for hints.

Type: <<types,String>>

Default: +pass:[1px solid #E3BE23]+

[[hints.chars]]
=== hints.chars
Characters used for hint strings.

Type: <<types,UniqueCharString>>

Default: +pass:[asdfghjkl]+

[[hints.dictionary]]
=== hints.dictionary
Dictionary file to be used by the word hints.

Type: <<types,File>>

Default: +pass:[/usr/share/dict/words]+

[[hints.find_implementation]]
=== hints.find_implementation
Which implementation to use to find elements to hint.

Type: <<types,String>>

Valid values:

 * +javascript+: Better but slower
 * +python+: Slightly worse but faster

Default: +pass:[python]+

This setting is only available with the QtWebKit backend.

[[hints.hide_unmatched_rapid_hints]]
=== hints.hide_unmatched_rapid_hints
Hide unmatched hints in rapid mode.

Type: <<types,Bool>>

Default: +pass:[true]+

[[hints.leave_on_load]]
=== hints.leave_on_load
Leave hint mode when starting a new page load.

Type: <<types,Bool>>

Default: +pass:[true]+

[[hints.min_chars]]
=== hints.min_chars
Minimum number of characters used for hint strings.

Type: <<types,Int>>

Default: +pass:[1]+

[[hints.mode]]
=== hints.mode
Mode to use for hints.

Type: <<types,String>>

Valid values:

 * +number+: Use numeric hints. (In this mode you can also type letters from the hinted element to filter and reduce the number of elements that are hinted.)
 * +letter+: Use the characters in the `hints.chars` setting.
 * +word+: Use hints words based on the html elements and the extra words.

Default: +pass:[letter]+

[[hints.next_regexes]]
=== hints.next_regexes
Comma-separated list of regular expressions to use for 'next' links.

Type: <<types,List of Regex>>

Default: 

- +pass:[\bnext\b]+
- +pass:[\bmore\b]+
- +pass:[\bnewer\b]+
- +pass:[\b[&gt;→≫]\b]+
- +pass:[\b(&gt;&gt;|»)\b]+
- +pass:[\bcontinue\b]+

[[hints.padding]]
=== hints.padding
Padding (in pixels) for hints.

Type: <<types,Padding>>

Default: 

- +pass:[bottom]+: +pass:[0]+
- +pass:[left]+: +pass:[3]+
- +pass:[right]+: +pass:[3]+
- +pass:[top]+: +pass:[0]+

[[hints.prev_regexes]]
=== hints.prev_regexes
Comma-separated list of regular expressions to use for 'prev' links.

Type: <<types,List of Regex>>

Default: 

- +pass:[\bprev(ious)?\b]+
- +pass:[\bback\b]+
- +pass:[\bolder\b]+
- +pass:[\b[&lt;←≪]\b]+
- +pass:[\b(&lt;&lt;|«)\b]+

[[hints.radius]]
=== hints.radius
Rounding radius (in pixels) for the edges of hints.

Type: <<types,Int>>

Default: +pass:[3]+

[[hints.scatter]]
=== hints.scatter
Scatter hint key chains (like Vimium) or not (like dwb).
Ignored for number hints.

Type: <<types,Bool>>

Default: +pass:[true]+

[[hints.selectors]]
=== hints.selectors
CSS selectors used to determine which elements on a page should have hints.

This setting supports URL patterns.

This setting can only be set in config.py.

Type: <<types,Dict>>

Default: 

- +pass:[all]+:

* +pass:[a]+
* +pass:[area]+
* +pass:[textarea]+
* +pass:[select]+
* +pass:[input:not([type=&quot;hidden&quot;])]+
* +pass:[button]+
* +pass:[frame]+
* +pass:[iframe]+
* +pass:[img]+
* +pass:[link]+
* +pass:[summary]+
* +pass:[[contenteditable]:not([contenteditable=&quot;false&quot;])]+
* +pass:[[onclick]]+
* +pass:[[onmousedown]]+
* +pass:[[role=&quot;link&quot;]]+
* +pass:[[role=&quot;option&quot;]]+
* +pass:[[role=&quot;button&quot;]]+
* +pass:[[ng-click]]+
* +pass:[[ngClick]]+
* +pass:[[data-ng-click]]+
* +pass:[[x-ng-click]]+
* +pass:[[tabindex]]+
- +pass:[images]+:

* +pass:[img]+
- +pass:[inputs]+:

* +pass:[input[type=&quot;text&quot;]]+
* +pass:[input[type=&quot;date&quot;]]+
* +pass:[input[type=&quot;datetime-local&quot;]]+
* +pass:[input[type=&quot;email&quot;]]+
* +pass:[input[type=&quot;month&quot;]]+
* +pass:[input[type=&quot;number&quot;]]+
* +pass:[input[type=&quot;password&quot;]]+
* +pass:[input[type=&quot;search&quot;]]+
* +pass:[input[type=&quot;tel&quot;]]+
* +pass:[input[type=&quot;time&quot;]]+
* +pass:[input[type=&quot;url&quot;]]+
* +pass:[input[type=&quot;week&quot;]]+
* +pass:[input:not([type])]+
* +pass:[[contenteditable]:not([contenteditable=&quot;false&quot;])]+
* +pass:[textarea]+
- +pass:[links]+:

* +pass:[a[href]]+
* +pass:[area[href]]+
* +pass:[link[href]]+
* +pass:[[role=&quot;link&quot;][href]]+
- +pass:[media]+:

* +pass:[audio]+
* +pass:[img]+
* +pass:[video]+
- +pass:[url]+:

* +pass:[[src]]+
* +pass:[[href]]+

[[hints.uppercase]]
=== hints.uppercase
Make characters in hint strings uppercase.

Type: <<types,Bool>>

Default: +pass:[false]+

[[history_gap_interval]]
=== history_gap_interval
Maximum time (in minutes) between two history items for them to be considered being from the same browsing session.
Items with less time between them are grouped when being displayed in `:history`. Use -1 to disable separation.

Type: <<types,Int>>

Default: +pass:[30]+

[[input.escape_quits_reporter]]
=== input.escape_quits_reporter
Allow Escape to quit the crash reporter.

Type: <<types,Bool>>

Default: +pass:[true]+

[[input.forward_unbound_keys]]
=== input.forward_unbound_keys
Which unbound keys to forward to the webview in normal mode.

Type: <<types,String>>

Valid values:

 * +all+: Forward all unbound keys.
 * +auto+: Forward unbound non-alphanumeric keys.
 * +none+: Don't forward any keys.

Default: +pass:[auto]+

[[input.insert_mode.auto_enter]]
=== input.insert_mode.auto_enter
Enter insert mode if an editable element is clicked.

Type: <<types,Bool>>

Default: +pass:[true]+

[[input.insert_mode.auto_leave]]
=== input.insert_mode.auto_leave
Leave insert mode if a non-editable element is clicked.

Type: <<types,Bool>>

Default: +pass:[true]+

[[input.insert_mode.auto_load]]
=== input.insert_mode.auto_load
Automatically enter insert mode if an editable element is focused after loading the page.

Type: <<types,Bool>>

Default: +pass:[false]+

[[input.insert_mode.leave_on_load]]
=== input.insert_mode.leave_on_load
Leave insert mode when starting a new page load.
Patterns may be unreliable on this setting, and they may match the url you are navigating to, or the URL you are navigating from.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

[[input.insert_mode.plugins]]
=== input.insert_mode.plugins
Switch to insert mode when clicking flash and other plugins.

Type: <<types,Bool>>

Default: +pass:[false]+

[[input.links_included_in_focus_chain]]
=== input.links_included_in_focus_chain
Include hyperlinks in the keyboard focus chain when tabbing.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[true]+

[[input.mouse.back_forward_buttons]]
=== input.mouse.back_forward_buttons
Enable back and forward buttons on the mouse.

Type: <<types,Bool>>

Default: +pass:[true]+

[[input.mouse.rocker_gestures]]
=== input.mouse.rocker_gestures
Enable Opera-like mouse rocker gestures.
This disables the context menu.

Type: <<types,Bool>>

Default: +pass:[false]+

[[input.partial_timeout]]
=== input.partial_timeout
Timeout (in milliseconds) for partially typed key bindings.
If the current input forms only partial matches, the keystring will be cleared after this time.

Type: <<types,Int>>

Default: +pass:[5000]+

[[input.spatial_navigation]]
=== input.spatial_navigation
Enable spatial navigation.
Spatial navigation consists in the ability to navigate between focusable elements in a Web page, such as hyperlinks and form controls, by using Left, Right, Up and Down arrow keys. For example, if the user presses the Right key, heuristics determine whether there is an element he might be trying to reach towards the right and which element he probably wants.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

[[keyhint.blacklist]]
=== keyhint.blacklist
Keychains that shouldn't be shown in the keyhint dialog.
Globs are supported, so `;*` will blacklist all keychains starting with `;`. Use `*` to disable keyhints.

Type: <<types,List of String>>

Default: empty

[[keyhint.delay]]
=== keyhint.delay
Time (in milliseconds) from pressing a key to seeing the keyhint dialog.

Type: <<types,Int>>

Default: +pass:[500]+

[[keyhint.radius]]
=== keyhint.radius
Rounding radius (in pixels) for the edges of the keyhint dialog.

Type: <<types,Int>>

Default: +pass:[6]+

[[logging.level.console]]
=== logging.level.console
Level for console (stdout/stderr) logs. Ignored if the `--loglevel` or `--debug` CLI flags are used.

Type: <<types,LogLevel>>

Valid values:

 * +vdebug+
 * +debug+
 * +info+
 * +warning+
 * +error+
 * +critical+

Default: +pass:[info]+

[[logging.level.ram]]
=== logging.level.ram
Level for in-memory logs.

Type: <<types,LogLevel>>

Valid values:

 * +vdebug+
 * +debug+
 * +info+
 * +warning+
 * +error+
 * +critical+

Default: +pass:[debug]+

[[messages.timeout]]
=== messages.timeout
Duration (in milliseconds) to show messages in the statusbar for.
Set to 0 to never clear messages.

Type: <<types,Int>>

Default: +pass:[2000]+

[[new_instance_open_target]]
=== new_instance_open_target
How to open links in an existing instance if a new one is launched.
This happens when e.g. opening a link from a terminal.
See `new_instance_open_target_window` to customize in which window the link is opened in.

Type: <<types,String>>

Valid values:

 * +tab+: Open a new tab in the existing window and activate the window.
 * +tab-bg+: Open a new background tab in the existing window and activate the window.
 * +tab-silent+: Open a new tab in the existing window without activating the window.
 * +tab-bg-silent+: Open a new background tab in the existing window without activating the window.
 * +window+: Open in a new window.
 * +private-window+: Open in a new private window.

Default: +pass:[tab]+

[[new_instance_open_target_window]]
=== new_instance_open_target_window
Which window to choose when opening links as new tabs.
When `new_instance_open_target` is set to `window`, this is ignored.

Type: <<types,String>>

Valid values:

 * +first-opened+: Open new tabs in the first (oldest) opened window.
 * +last-opened+: Open new tabs in the last (newest) opened window.
 * +last-focused+: Open new tabs in the most recently focused window.
 * +last-visible+: Open new tabs in the most recently visible window.

Default: +pass:[last-focused]+

[[prompt.filebrowser]]
=== prompt.filebrowser
Show a filebrowser in download prompts.

Type: <<types,Bool>>

Default: +pass:[true]+

[[prompt.radius]]
=== prompt.radius
Rounding radius (in pixels) for the edges of prompts.

Type: <<types,Int>>

Default: +pass:[8]+

[[qt.args]]
=== qt.args
Additional arguments to pass to Qt, without leading `--`.
With QtWebEngine, some Chromium arguments (see https://peter.sh/experiments/chromium-command-line-switches/ for a list) will work.

This setting requires a restart.

Type: <<types,List of String>>

Default: empty

[[qt.force_platform]]
=== qt.force_platform
Force a Qt platform to use.
This sets the `QT_QPA_PLATFORM` environment variable and is useful to force using the XCB plugin when running QtWebEngine on Wayland.

This setting requires a restart.

Type: <<types,String>>

Default: empty

[[qt.force_platformtheme]]
=== qt.force_platformtheme
Force a Qt platformtheme to use.
This sets the `QT_QPA_PLATFORMTHEME` environment variable which controls dialogs like the filepicker. By default, Qt determines the platform theme based on the desktop environment.

This setting requires a restart.

Type: <<types,String>>

Default: empty

[[qt.force_software_rendering]]
=== qt.force_software_rendering
Force software rendering for QtWebEngine.
This is needed for QtWebEngine to work with Nouveau drivers and can be useful in other scenarios related to graphic issues.

This setting requires a restart.

Type: <<types,String>>

Valid values:

 * +software-opengl+: Tell LibGL to use a software implementation of GL (`LIBGL_ALWAYS_SOFTWARE` / `QT_XCB_FORCE_SOFTWARE_OPENGL`)
 * +qt-quick+: Tell Qt Quick to use a software renderer instead of OpenGL. (`QT_QUICK_BACKEND=software`)
 * +chromium+: Tell Chromium to disable GPU support and use Skia software rendering instead. (`--disable-gpu`)
 * +none+: Don't force software rendering.

Default: +pass:[none]+

This setting is only available with the QtWebEngine backend.

[[qt.highdpi]]
=== qt.highdpi
Turn on Qt HighDPI scaling.
This is equivalent to setting QT_AUTO_SCREEN_SCALE_FACTOR=1 or QT_ENABLE_HIGHDPI_SCALING=1 (Qt >= 5.14) in the environment.
It's off by default as it can cause issues with some bitmap fonts. As an alternative to this, it's possible to set font sizes and the `zoom.default` setting.

This setting requires a restart.

Type: <<types,Bool>>

Default: +pass:[false]+

[[qt.low_end_device_mode]]
=== qt.low_end_device_mode
When to use Chromium's low-end device mode.
This improves the RAM usage of renderer processes, at the expense of performance.

This setting requires a restart.

Type: <<types,String>>

Valid values:

 * +always+: Always use low-end device mode.
 * +auto+: Decide automatically (uses low-end mode with < 1 GB available RAM).
 * +never+: Never use low-end device mode.

Default: +pass:[auto]+

This setting is only available with the QtWebEngine backend.

[[qt.process_model]]
=== qt.process_model
Which Chromium process model to use.
Alternative process models use less resources, but decrease security and robustness.
See the following pages for more details:

  - https://www.chromium.org/developers/design-documents/process-models
  - https://doc.qt.io/qt-5/qtwebengine-features.html#process-models

This setting requires a restart.

Type: <<types,String>>

Valid values:

 * +process-per-site-instance+: Pages from separate sites are put into separate processes and separate visits to the same site are also isolated.
 * +process-per-site+: Pages from separate sites are put into separate processes. Unlike Process per Site Instance, all visits to the same site will share an OS process. The benefit of this model is reduced memory consumption, because more web pages will share processes. The drawbacks include reduced security, robustness, and responsiveness.
 * +single-process+: Run all tabs in a single process. This should be used for debugging purposes only, and it disables `:open --private`.

Default: +pass:[process-per-site-instance]+

This setting is only available with the QtWebEngine backend.

[[scrolling.bar]]
=== scrolling.bar
When/how to show the scrollbar.

Type: <<types,String>>

Valid values:

 * +always+: Always show the scrollbar.
 * +never+: Never show the scrollbar.
 * +when-searching+: Show the scrollbar when searching for text in the webpage. With the QtWebKit backend, this is equal to `never`.
 * +overlay+: Show an overlay scrollbar. With Qt < 5.11 or on macOS, this is unavailable and equal to `when-searching`; with the QtWebKit backend, this is equal to `never`. Enabling/disabling overlay scrollbars requires a restart.

Default: +pass:[overlay]+

[[scrolling.smooth]]
=== scrolling.smooth
Enable smooth scrolling for web pages.
Note smooth scrolling does not work with the `:scroll-px` command.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

[[search.ignore_case]]
=== search.ignore_case
When to find text on a page case-insensitively.

Type: <<types,IgnoreCase>>

Valid values:

 * +always+: Search case-insensitively.
 * +never+: Search case-sensitively.
 * +smart+: Search case-sensitively if there are capital characters.

Default: +pass:[smart]+

[[search.incremental]]
=== search.incremental
Find text on a page incrementally, renewing the search for each typed character.

Type: <<types,Bool>>

Default: +pass:[true]+

[[search.wrap]]
=== search.wrap
Wrap around at the top and bottom of the page when advancing through text matches using `:search-next` and `:search-prev`.

Type: <<types,Bool>>

Default: +pass:[true]+

On QtWebEngine, this setting requires Qt 5.14 or newer.

[[session.default_name]]
=== session.default_name
Name of the session to save by default.
If this is set to null, the session which was last loaded is saved.

Type: <<types,SessionName>>

Default: empty

[[session.lazy_restore]]
=== session.lazy_restore
Load a restored tab as soon as it takes focus.

Type: <<types,Bool>>

Default: +pass:[false]+

[[spellcheck.languages]]
=== spellcheck.languages
Languages to use for spell checking.
You can check for available languages and install dictionaries using scripts/dictcli.py. Run the script with -h/--help for instructions.

Type: <<types,List of String>>

Valid values:

 * +af-ZA+: Afrikaans (South Africa)
 * +bg-BG+: Bulgarian (Bulgaria)
 * +ca-ES+: Catalan (Spain)
 * +cs-CZ+: Czech (Czech Republic)
 * +da-DK+: Danish (Denmark)
 * +de-DE+: German (Germany)
 * +el-GR+: Greek (Greece)
 * +en-AU+: English (Australia)
 * +en-CA+: English (Canada)
 * +en-GB+: English (United Kingdom)
 * +en-US+: English (United States)
 * +es-ES+: Spanish (Spain)
 * +et-EE+: Estonian (Estonia)
 * +fa-IR+: Farsi (Iran)
 * +fo-FO+: Faroese (Faroe Islands)
 * +fr-FR+: French (France)
 * +he-IL+: Hebrew (Israel)
 * +hi-IN+: Hindi (India)
 * +hr-HR+: Croatian (Croatia)
 * +hu-HU+: Hungarian (Hungary)
 * +id-ID+: Indonesian (Indonesia)
 * +it-IT+: Italian (Italy)
 * +ko+: Korean
 * +lt-LT+: Lithuanian (Lithuania)
 * +lv-LV+: Latvian (Latvia)
 * +nb-NO+: Norwegian (Norway)
 * +nl-NL+: Dutch (Netherlands)
 * +pl-PL+: Polish (Poland)
 * +pt-BR+: Portuguese (Brazil)
 * +pt-PT+: Portuguese (Portugal)
 * +ro-RO+: Romanian (Romania)
 * +ru-RU+: Russian (Russia)
 * +sh+: Serbo-Croatian
 * +sk-SK+: Slovak (Slovakia)
 * +sl-SI+: Slovenian (Slovenia)
 * +sq+: Albanian
 * +sr+: Serbian
 * +sv-SE+: Swedish (Sweden)
 * +ta-IN+: Tamil (India)
 * +tg-TG+: Tajik (Tajikistan)
 * +tr-TR+: Turkish (Turkey)
 * +uk-UA+: Ukrainian (Ukraine)
 * +vi-VN+: Vietnamese (Viet Nam)

Default: empty

On QtWebEngine, this setting requires Qt 5.8 or newer.

On QtWebKit, this setting is unavailable.

[[statusbar.padding]]
=== statusbar.padding
Padding (in pixels) for the statusbar.

Type: <<types,Padding>>

Default: 

- +pass:[bottom]+: +pass:[1]+
- +pass:[left]+: +pass:[0]+
- +pass:[right]+: +pass:[0]+
- +pass:[top]+: +pass:[1]+

[[statusbar.position]]
=== statusbar.position
Position of the status bar.

Type: <<types,VerticalPosition>>

Valid values:

 * +top+
 * +bottom+

Default: +pass:[bottom]+

[[statusbar.show]]
=== statusbar.show
When to show the statusbar.

Type: <<types,String>>

Valid values:

 * +always+: Always show the statusbar.
 * +never+: Always hide the statusbar.
 * +in-mode+: Show the statusbar when in modes other than normal mode.

Default: +pass:[always]+

[[statusbar.widgets]]
=== statusbar.widgets
List of widgets displayed in the statusbar.

Type: <<types,List of String>>

Valid values:

 * +url+: Current page URL.
 * +scroll+: Percentage of the current page position like `10%`.
 * +scroll_raw+: Raw percentage of the current page position like `10`.
 * +history+: Display an arrow when possible to go back/forward in history.
 * +tabs+: Current active tab, e.g. `2`.
 * +keypress+: Display pressed keys when composing a vi command.
 * +progress+: Progress bar for the current page loading.

Default: 

- +pass:[keypress]+
- +pass:[url]+
- +pass:[scroll]+
- +pass:[history]+
- +pass:[tabs]+
- +pass:[progress]+

[[tabs.background]]
=== tabs.background
Open new tabs (middleclick/ctrl+click) in the background.

Type: <<types,Bool>>

Default: +pass:[false]+

[[tabs.close_mouse_button]]
=== tabs.close_mouse_button
Mouse button with which to close tabs.

Type: <<types,String>>

Valid values:

 * +right+: Close tabs on right-click.
 * +middle+: Close tabs on middle-click.
 * +none+: Don't close tabs using the mouse.

Default: +pass:[middle]+

[[tabs.close_mouse_button_on_bar]]
=== tabs.close_mouse_button_on_bar
How to behave when the close mouse button is pressed on the tab bar.

Type: <<types,String>>

Valid values:

 * +new-tab+: Open a new tab.
 * +close-current+: Close the current tab.
 * +close-last+: Close the last tab.
 * +ignore+: Don't do anything.

Default: +pass:[new-tab]+

[[tabs.favicons.scale]]
=== tabs.favicons.scale
Scaling factor for favicons in the tab bar.
The tab size is unchanged, so big favicons also require extra `tabs.padding`.

Type: <<types,Float>>

Default: +pass:[1.0]+

[[tabs.favicons.show]]
=== tabs.favicons.show
When to show favicons in the tab bar.

Type: <<types,String>>

Valid values:

 * +always+: Always show favicons.
 * +never+: Always hide favicons.
 * +pinned+: Show favicons only on pinned tabs.

Default: +pass:[always]+

[[tabs.focus_stack_size]]
=== tabs.focus_stack_size
Maximum stack size to remember for tab switches (-1 for no maximum).

Type: <<types,Int>>

Default: +pass:[10]+

[[tabs.indicator.padding]]
=== tabs.indicator.padding
Padding (in pixels) for tab indicators.

Type: <<types,Padding>>

Default: 

- +pass:[bottom]+: +pass:[2]+
- +pass:[left]+: +pass:[0]+
- +pass:[right]+: +pass:[4]+
- +pass:[top]+: +pass:[2]+

[[tabs.indicator.width]]
=== tabs.indicator.width
Width (in pixels) of the progress indicator (0 to disable).

Type: <<types,Int>>

Default: +pass:[3]+

[[tabs.last_close]]
=== tabs.last_close
How to behave when the last tab is closed.

Type: <<types,String>>

Valid values:

 * +ignore+: Don't do anything.
 * +blank+: Load a blank page.
 * +startpage+: Load the start page.
 * +default-page+: Load the default page.
 * +close+: Close the window.

Default: +pass:[ignore]+

[[tabs.max_width]]
=== tabs.max_width
Maximum width (in pixels) of tabs (-1 for no maximum).
This setting only applies when tabs are horizontal.
This setting does not apply to pinned tabs, unless `tabs.pinned.shrink` is False.
This setting may not apply properly if max_width is smaller than the minimum size of tab contents, or smaller than tabs.min_width.

Type: <<types,Int>>

Default: +pass:[-1]+

[[tabs.min_width]]
=== tabs.min_width
Minimum width (in pixels) of tabs (-1 for the default minimum size behavior).
This setting only applies when tabs are horizontal.
This setting does not apply to pinned tabs, unless `tabs.pinned.shrink` is False.

Type: <<types,Int>>

Default: +pass:[-1]+

[[tabs.mode_on_change]]
=== tabs.mode_on_change
When switching tabs, what input mode is applied.

Type: <<types,String>>

Valid values:

 * +persist+: Retain the current mode.
 * +restore+: Restore previously saved mode.
 * +normal+: Always revert to normal mode.

Default: +pass:[normal]+

[[tabs.mousewheel_switching]]
=== tabs.mousewheel_switching
Switch between tabs using the mouse wheel.

Type: <<types,Bool>>

Default: +pass:[true]+

[[tabs.new_position.related]]
=== tabs.new_position.related
Position of new tabs opened from another tab.
See `tabs.new_position.stacking` for controlling stacking behavior.

Type: <<types,NewTabPosition>>

Valid values:

 * +prev+: Before the current tab.
 * +next+: After the current tab.
 * +first+: At the beginning.
 * +last+: At the end.

Default: +pass:[next]+

[[tabs.new_position.stacking]]
=== tabs.new_position.stacking
Stack related tabs on top of each other when opened consecutively.
Only applies for `next` and `prev` values of `tabs.new_position.related` and `tabs.new_position.unrelated`.

Type: <<types,Bool>>

Default: +pass:[true]+

[[tabs.new_position.unrelated]]
=== tabs.new_position.unrelated
Position of new tabs which are not opened from another tab.
See `tabs.new_position.stacking` for controlling stacking behavior.

Type: <<types,NewTabPosition>>

Valid values:

 * +prev+: Before the current tab.
 * +next+: After the current tab.
 * +first+: At the beginning.
 * +last+: At the end.

Default: +pass:[last]+

[[tabs.padding]]
=== tabs.padding
Padding (in pixels) around text for tabs.

Type: <<types,Padding>>

Default: 

- +pass:[bottom]+: +pass:[0]+
- +pass:[left]+: +pass:[5]+
- +pass:[right]+: +pass:[5]+
- +pass:[top]+: +pass:[0]+

[[tabs.pinned.frozen]]
=== tabs.pinned.frozen
Force pinned tabs to stay at fixed URL.

Type: <<types,Bool>>

Default: +pass:[true]+

[[tabs.pinned.shrink]]
=== tabs.pinned.shrink
Shrink pinned tabs down to their contents.

Type: <<types,Bool>>

Default: +pass:[true]+

[[tabs.position]]
=== tabs.position
Position of the tab bar.

Type: <<types,Position>>

Valid values:

 * +top+
 * +bottom+
 * +left+
 * +right+

Default: +pass:[top]+

[[tabs.select_on_remove]]
=== tabs.select_on_remove
Which tab to select when the focused tab is removed.

Type: <<types,SelectOnRemove>>

Valid values:

 * +prev+: Select the tab which came before the closed one (left in horizontal, above in vertical).
 * +next+: Select the tab which came after the closed one (right in horizontal, below in vertical).
 * +last-used+: Select the previously selected tab.

Default: +pass:[next]+

[[tabs.show]]
=== tabs.show
When to show the tab bar.

Type: <<types,String>>

Valid values:

 * +always+: Always show the tab bar.
 * +never+: Always hide the tab bar.
 * +multiple+: Hide the tab bar if only one tab is open.
 * +switching+: Show the tab bar when switching tabs.

Default: +pass:[always]+

[[tabs.show_switching_delay]]
=== tabs.show_switching_delay
Duration (in milliseconds) to show the tab bar before hiding it when tabs.show is set to 'switching'.

Type: <<types,Int>>

Default: +pass:[800]+

[[tabs.tabs_are_windows]]
=== tabs.tabs_are_windows
Open a new window for every tab.

Type: <<types,Bool>>

Default: +pass:[false]+

[[tabs.title.alignment]]
=== tabs.title.alignment
Alignment of the text inside of tabs.

Type: <<types,TextAlignment>>

Valid values:

 * +left+
 * +right+
 * +center+

Default: +pass:[left]+

[[tabs.title.format]]
=== tabs.title.format
Format to use for the tab title.
The following placeholders are defined:

* `{perc}`: Percentage as a string like `[10%]`.
* `{perc_raw}`: Raw percentage, e.g. `10`.
* `{current_title}`: Title of the current web page.
* `{title_sep}`: The string `" - "` if a title is set, empty otherwise.
* `{index}`: Index of this tab.
* `{aligned_index}`: Index of this tab padded with spaces to have the same
  width.
* `{id}`: Internal tab ID of this tab.
* `{scroll_pos}`: Page scroll position.
* `{host}`: Host of the current web page.
* `{backend}`: Either `webkit` or `webengine`
* `{private}`: Indicates when private mode is enabled.
* `{current_url}`: URL of the current web page.
* `{protocol}`: Protocol (http/https/...) of the current web page.
* `{audio}`: Indicator for audio/mute status.


Type: <<types,FormatString>>

Default: +pass:[{audio}{index}: {current_title}]+

[[tabs.title.format_pinned]]
=== tabs.title.format_pinned
Format to use for the tab title for pinned tabs. The same placeholders like for `tabs.title.format` are defined.

Type: <<types,FormatString>>

Default: +pass:[{index}]+

[[tabs.tooltips]]
=== tabs.tooltips
Show tooltips on tabs.
Note this setting only affects windows opened after it has been set.

Type: <<types,Bool>>

Default: +pass:[true]+

[[tabs.undo_stack_size]]
=== tabs.undo_stack_size
Number of closed tabs (per window) and closed windows to remember for :undo (-1 for no maximum).

Type: <<types,Int>>

Default: +pass:[100]+

[[tabs.width]]
=== tabs.width
Width (in pixels or as percentage of the window) of the tab bar if it's vertical.

Type: <<types,PercOrInt>>

Default: +pass:[20%]+

[[tabs.wrap]]
=== tabs.wrap
Wrap when changing tabs.

Type: <<types,Bool>>

Default: +pass:[true]+

[[url.auto_search]]
=== url.auto_search
What search to start when something else than a URL is entered.

Type: <<types,String>>

Valid values:

 * +naive+: Use simple/naive check.
 * +dns+: Use DNS requests (might be slow!).
 * +never+: Never search automatically.
 * +schemeless+: Always search automatically unless URL explicitly contains a scheme.

Default: +pass:[naive]+

[[url.default_page]]
=== url.default_page
Page to open if :open -t/-b/-w is used without URL.
Use `about:blank` for a blank page.

Type: <<types,FuzzyUrl>>

Default: +pass:[https://start.duckduckgo.com/]+

[[url.incdec_segments]]
=== url.incdec_segments
URL segments where `:navigate increment/decrement` will search for a number.

Type: <<types,FlagList>>

Valid values:

 * +host+
 * +port+
 * +path+
 * +query+
 * +anchor+

Default: 

- +pass:[path]+
- +pass:[query]+

[[url.open_base_url]]
=== url.open_base_url
Open base URL of the searchengine if a searchengine shortcut is invoked without parameters.

Type: <<types,Bool>>

Default: +pass:[false]+

[[url.searchengines]]
=== url.searchengines
Search engines which can be used via the address bar.

Maps a search engine name (such as `DEFAULT`, or `ddg`) to a URL with a
`{}` placeholder. The placeholder will be replaced by the search term, use
`{{` and `}}` for literal `{`/`}` braces.

The following further placeholds are defined to configure how special
characters in the search terms are replaced by safe characters (called
'quoting'):

* `{}` and `{semiquoted}` quote everything except slashes; this is the most
  sensible choice for almost all search engines (for the search term
  `slash/and&amp` this placeholder expands to `slash/and%26amp`).
* `{quoted}` quotes all characters (for `slash/and&amp` this placeholder
  expands to `slash%2Fand%26amp`).
* `{unquoted}` quotes nothing (for `slash/and&amp` this placeholder
  expands to `slash/and&amp`).

The search engine named `DEFAULT` is used when `url.auto_search` is turned
on and something else than a URL was entered to be opened. Other search
engines can be used by prepending the search engine name to the search
term, e.g. `:open google qutebrowser`.


Type: <<types,Dict>>

Default: 

- +pass:[DEFAULT]+: +pass:[https://duckduckgo.com/?q={}]+

[[url.start_pages]]
=== url.start_pages
Page(s) to open at the start.

Type: <<types,List of FuzzyUrl&#44; or FuzzyUrl>>

Default: +pass:[https://start.duckduckgo.com]+

[[url.yank_ignored_parameters]]
=== url.yank_ignored_parameters
URL parameters to strip with `:yank url`.

Type: <<types,List of String>>

Default: 

- +pass:[ref]+
- +pass:[utm_source]+
- +pass:[utm_medium]+
- +pass:[utm_campaign]+
- +pass:[utm_term]+
- +pass:[utm_content]+

[[window.hide_decoration]]
=== window.hide_decoration
Hide the window decoration.

This setting requires a restart on Wayland.


Type: <<types,Bool>>

Default: +pass:[false]+

[[window.title_format]]
=== window.title_format
Format to use for the window title. The same placeholders like for
`tabs.title.format` are defined.


Type: <<types,FormatString>>

Default: +pass:[{perc}{current_title}{title_sep}qutebrowser]+

[[zoom.default]]
=== zoom.default
Default zoom level.

Type: <<types,Perc>>

Default: +pass:[100%]+

[[zoom.levels]]
=== zoom.levels
Available zoom levels.

Type: <<types,List of Perc>>

Default: 

- +pass:[25%]+
- +pass:[33%]+
- +pass:[50%]+
- +pass:[67%]+
- +pass:[75%]+
- +pass:[90%]+
- +pass:[100%]+
- +pass:[110%]+
- +pass:[125%]+
- +pass:[150%]+
- +pass:[175%]+
- +pass:[200%]+
- +pass:[250%]+
- +pass:[300%]+
- +pass:[400%]+
- +pass:[500%]+

[[zoom.mouse_divider]]
=== zoom.mouse_divider
Number of zoom increments to divide the mouse wheel movements to.

Type: <<types,Int>>

Default: +pass:[512]+

[[zoom.text_only]]
=== zoom.text_only
Apply the zoom factor on a frame only to the text or to all content.

This setting supports URL patterns.

Type: <<types,Bool>>

Default: +pass:[false]+

This setting is only available with the QtWebKit backend.

== Setting types
[[types]]
[options="header",width="75%",cols="25%,75%"]
|==============
|Type|Description
|Bool|A boolean setting, either `true` or `false`.

When setting from a string, `1`, `yes`, `on` and `true` count as true, while `0`, `no`, `off` and `false` count as false (case-insensitive).
|BoolAsk|Like `Bool`, but `ask` is allowed as additional value.
|ColorSystem|The color system to use for color interpolation.
|Command|A qutebrowser command with arguments.
|ConfirmQuit|Whether to display a confirmation when the window is closed.
|Dict|A dictionary of values.

When setting from a string, pass a json-like dict, e.g. `{"key", "value"}`.
|Directory|A directory on the local filesystem.
|Encoding|Setting for a python encoding.
|File|A file on the local filesystem.
|FlagList|A list of flags.

Lists with duplicate flags are invalid. Each item is checked against the valid values of the setting.
|Float|Base class for a float setting.
|Font|A font family, with optional style/weight/size.

* Style: `normal`/`italic`/`oblique` * Weight: `normal`, `bold`, `100`..`900` * Size: _number_ `px`/`pt`
|FontFamily|A Qt font family.
|FormatString|A string with placeholders.
|FuzzyUrl|A URL which gets interpreted as search if needed.
|IgnoreCase|Whether to search case insensitively.
|Int|Base class for an integer setting.
|Key|A name of a key.
|List|A list of values.

When setting from a string, pass a json-like list, e.g. `["one", "two"]`.
|ListOrValue|A list of values, or a single value.
|LogLevel|A logging level.
|NewTabPosition|How new tabs are positioned.
|Padding|Setting for paddings around elements.
|Perc|A percentage.
|PercOrInt|Percentage or integer.
|Position|The position of the tab bar.
|Proxy|A proxy URL, or `system`/`none`.
|QssColor|A color value supporting gradients.

A value can be in one of the following formats: * `#RGB`/`#RRGGBB`/`#AARRGGBB`/`#RRRGGGBBB`/`#RRRRGGGGBBBB` * An SVG color name as specified in http://www.w3.org/TR/SVG/types.html#ColorKeywords[the W3C specification]. * transparent (no color) * `rgb(r, g, b)` / `rgba(r, g, b, a)` (values 0-255 or percentages) * `hsv(h, s, v)` / `hsva(h, s, v, a)` (values 0-255, hue 0-359) * A gradient as explained in http://doc.qt.io/qt-5/stylesheet-reference.html#list-of-property-types[the Qt documentation] under ``Gradient''
|QtColor|A color value.

A value can be in one of the following formats: * `#RGB`/`#RRGGBB`/`#AARRGGBB`/`#RRRGGGBBB`/`#RRRRGGGGBBBB` * An SVG color name as specified in http://www.w3.org/TR/SVG/types.html#ColorKeywords[the W3C specification]. * transparent (no color) * `rgb(r, g, b)` / `rgba(r, g, b, a)` (values 0-255 or percentages) * `hsv(h, s, v)` / `hsva(h, s, v, a)` (values 0-255, hue 0-359)
|Regex|A regular expression.

When setting from `config.py`, both a string or a `re.compile(...)` object are valid.
|SearchEngineUrl|A search engine URL.
|SelectOnRemove|Which tab to select when the focused tab is removed.
|SessionName|The name of a session.
|ShellCommand|A shell command as a list.

See the documentation for `List`.
|String|A string value.

See the setting's valid values for more information on allowed values.
|TextAlignment|Alignment of text.
|UniqueCharString|A string which may not contain duplicate chars.
|Url|A URL as a string.
|UrlPattern|A match pattern for a URL.

See https://developer.chrome.com/apps/match_patterns for the allowed syntax.
|VerticalPosition|The position of the download bar.
|==============
